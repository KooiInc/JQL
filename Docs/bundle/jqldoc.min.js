function f(e){e.editCssRules("body{font:normal 13px/17px Verdana,Arial,sans-serif;overflow:hidden;}","#navigation{position:fixed;overflow-y:auto;top:1em;bottom:0;}","#navgation,.doc{scrollbar-width:none;-ms-overflow-style:none;}","#navigation::-webkit-scrollbar,.docs::-webkit-scrollbar{width:0;height:0;}",".docs{position:absolute;top:1em;bottom:0;left:7vw;padding-bottom:100rem;padding-left:1rem;max-width:40vw;overflow:auto;}",'.docs.loading:before{content:"Loading ...";font-size:3rem;font-weight:bold;color:red;display:block;margin-top:2rem;z-index:5;}',".param{margin-bottom:0.3rem;}",".navGroup{cursor:pointer;margin-left:-1.2rem;margin-block-start:0.5em;}","ul.navGroup.closed li.grouped{list-style:'\\25BC';}","ul.navGroup li.grouped{padding-left:0.2rem;list-style:'\\25b2';color:brown;}","ul.navGroup.closed li ul.navGroupItems{display:none;}","ul.navGroup li:not(.grouped){list-style:none;padding-left:0.2rem;margin-left:-2rem;}",".jqlTitle{color:green;}",".jqlTitle b{color:red;}",".selected{color:blue;font-weight:bolder;}","ul.navGroupItems li{color:#777;}","[data-key]{color:#777;}","[data-key]:hover{background-color:#eee;}","[data-groupcontainer]{padding:1.5rem 1rem 1rem;box-shadow:2px 2px 6px #999;border-radius:5px;max-width:96%;}",".linkLike,.linkLike code{color:blue;cursor:pointer;display:inline-block;}",".linkLike:hover{text-decoration:underline;}",'.methodName{margin:2.5rem 0 0.5rem 0;color:blue;font-size:1.2rem;font-family:"Courier New",serif;cursor:pointer;background-color:#eee;padding:3px;border:1px solid #999;text-align:center;}',".methodName span.group{color:#777;}",".exRunBttn[disabled]{background-color:buttonface;border-width:1px;}",".groupHeader{min-width:100px;max-width:200px;text-align:center;border:1px solid green;padding:5px;border-radius:5px;background-color:#eee;margin:0 auto -1.4rem auto;position:relative;}",".groupHeader:first-child{margin-top:1em;}",".groupHeader:not(:first-child){margin-top:2rem;}",".returnValue,.description{margin-top:0.6rem;}",".description div:not(.linkLike){margin:0.6rem 0 0.6rem 0;}",".description .template{display:none;}",".description ul{margin:0 0 auto -1.2rem;}",".description ul ul{margin:0 0 auto -1.2rem;}",".description ul ul li{list-style:'\\2714';margin-left:-0.7rem;}",".description ul li{list-style:'\\2705';margin-top:0.1rem;padding-left:0.2rem;}",".description ul li div{margin-top:0.1rem !important;margin-bottom:0.2rem !important;}",".example{margin-left:0.5rem;margin-bottom:-0.2rem;}",".exContainer{white-space:revert;}",".exRunBttn{position:relative;display:block;margin:-1.2rem 0 1rem 1rem;}","code:not(.js){color:green;background-color:#EEE;display:inline-block;padding:1px;}","code b{color:red;}","img.gitLink{width:32px;height:32px;margin-right:4px;vertical-align:middle;}","@media (max-width:2200px){.docs{max-width:65vw;left:10vw;}}","@media (max-width:1440px){.docs{max-width:75vw;left:13vw;}}","@media (max-width:1024px){.docs{left:16vw;max-width:80vw;}}","@media (max-width:800px){.docs{left:24vw;max-width:70vw;}}")}var H=D;function D(e){let i=L(e);return e.editCssRules('[data-id="tmpEx"], #tmpEx { white-space: normal; padding-top: 5px;}',".test { color: red; }"),function(l){if(l.type==="scroll")return c(l);let g=!l.target?.closest?.("[data-key]")&&l.target.closest(".navGroup"),u=l.target?.closest?.(".methodName"),h=l.target?.dataset?.action,E=l.target?.dataset?.navitem;if(g)return i.clickNavGroup(l,g);if(E)return i.clickNavItem(l);if(u)return i.jumpTo(u.id);if(h&&i[h])return i[h](l)};function c(a){let l=a.target.scrollTop,g=e.nodes("h3.methodName, h3.groupHeader").find(u=>l-u.offsetTop<=10);if(g){let u=e(`[data-navitem="#${g.id}"]`);u.hasClass("selected")||(e(".navGroup:not(.closed)").addClass("closed"),u.closest(".navGroup").removeClass("closed"),e(".selected").removeClass("selected"),u.addClass("selected"))}}}function L(e){let i=o=>o===void 0?"Yep \u{1F60E}":"Nope \u{1F621}",c=(o,t=0)=>([o,t]=[Math.floor(o),Math.ceil(t)],Math.floor([...crypto.getRandomValues(new Uint32Array(1))].shift()/4294967296*(o-t+1)+t)),a=e.virtual,l=e.Popup,g=e.node(".docs"),u=()=>g.scrollBy(0,-15),h=()=>{let o=a('<button id="modalCloseTest">Close me</button>').on("click",()=>l.removeModal()),t=()=>l.show({content:"Modal closed, you're ok, bye.",closeAfter:2}),s=a(e("[data-popup2]").html()).append(a("<p/>").append(o));l.show({content:s,modal:!0,callback:t,warnMessage:"There's only one escape here!"})},E=()=>{let o=a('<button id="modalCloseTest">Close me</button>').on("click",()=>l.removeModal()),t=()=>l.show({content:"Modal closed, you're ok, bye.",closeAfter:2}),s=a(e("[data-popup2]").html()).append(a("<p/>").append(o));l.show({content:s,modal:!0,callback:t,warnMessage:'"In other words: <i>you can only close this using the <b>button</b> ...</i>"'})},p=(...o)=>setTimeout(()=>{e('#tmpEx, [data-id="tmpEx"]').remove(),o.length&&e.removeCssRule(...o)},2500),x=(o=!1)=>o?e.removeCssRule("#tmpEx"):e.editCssRule("#tmpEx {color: green; font-weight: bold;}");return e.log("Documenter handling done."),{popupTimed:()=>l.show({content:e("[data-popup3]").html(),closeAfter:5}),popupModal:h,modalPopupShowDemo:E,popup:()=>l.show({content:a(e("[data-popup1]").outerHtml)}),popupShow:()=>l.show({content:a(e("[data-popup1]").outerHtml)}),addClassEx:o=>{e("#tmpEx").remove(),e.setStyle("#tmpEx.warnUser {color: red; font-weight: bold;}"),e.setStyle(".user:before {content: 'Hi user! ';}"),e('<div id="tmpEx">This is not very useful</div>',o.target.closest(".description")).addClass("warnUser","user"),p()},appendEx:o=>{e("#tmpEx").remove(),x(),e.editCssRule(".appended { color: red; cursor: pointer; }");let t=e.virtual('<div class="appended">I am an appended JQL instance ...</div>').on("click",()=>alert("HELLO!")),s=e('<div id="tmpEx">Hi there! Wait a sec ... </div>',o.target.closest(".description")).append(t,"Appended text","<div>Appended HTML string</div>",Object.assign(document.createElement("div"),{textContent:"Appended element"}));setTimeout(()=>l.show({content:t.html("Now I am appended to the popup element, you can still click me"),callback:()=>p(".appended","#tmpEx")}),1500)},prependEx:o=>{e("#tmpEx").remove(),x(),e.editCssRule(".appended { color: red; }"),e('<div id="tmpEx">... hi there!</div>',o.target.closest(".description")).prepend('<div class="appended">Hello and also ...</div>'),p(".appended")},afterMeEx:o=>{e.Popup.show({content:e.div("I am div 1").afterMe(e("<div>And I am div 2</div>"))})},beforeMeEx:o=>{e.Popup.show({content:e("<div>And I am div 2</div>").beforeMe(e.div("I am div 1"))})},andThenEx:o=>{let t=e.p("I am <p> the first"),s=e.p("I am <p> the second"),d="<code>ele1.andThen(ele2)</code>",r="<code>ele2.andThen(ele1, true)</code>";e.Popup.show({content:e(d).andThen(t).andThen(s),callback:()=>e.Popup.show({content:e(r).andThen(s.andThen(t,!0))})})},isEx:o=>{let t=e('<input id="disabledInput" disabled type="text" placeholder="I am not enabled">',o.target.closest(".description")),s=t.is,d=[`visible? ${s.visible}`,`disabled? ${s.disabled}`,`writable? ${s.writable}`];l.show({content:`<code>${e("#disabledInput").outerHtml.replace(/</g,"&lt;")}</code>
        <p>${d.join("<br>")}</p>`,callback:()=>t.remove()})},closestEx:o=>{let t=e('<div><b style="color:red">Hello world again</b></div>',o.target.closest(".description"));l.show({content:`<code>someDiv.closest(".description").HTML.get(1, 1)</code><br>${t.closest(".description").HTML.get(1,1).slice(0,100)}&hellip;`,callback:()=>t.remove()})},chainEx:o=>{e("#tmpEx").remove(),e.editCssRules("#tmpEx {color: green;}",".helloworld {font-weight: bold;}"),x(),e('<div id="tmpEx">Hello world.</div>',o.target.closest(".description")).addClass("helloworld").append("<span> And the rest of the universe ... </span>").text(" (will disappear shortly)",!0),p(".helloworld","#tmpEx")},fnEx:()=>{e.fn("addTitle",(t,s)=>s?t.prop("title",s):t);let o=e.virtual('<div data-id="tmpEx">Hello world</div>');l.show({content:o.addTitle("hi there!").append(`<div>My title is now "${o.prop("title")}". Hover me!</div>`),callback:o.remove})},staticElemEx:()=>{e.editCssRules(".exRed {color: red;}");let o=e.p("Hello world ...").append(e.i(e.B.text(" here we are!").addClass("exRed")));e.Popup.show({content:o,callback:()=>e.removeCssRule(".exRed")})},staticElemEx2:()=>{e.editCssRules(".exRed {color: red;}",".exFont {font-family: fantasy; font-size: 1.2rem;}");let o=e.p({content:"Hello world ... ",props:{id:"Hithere"}}).append(e.i({content:e.SPAN.text(" here we are!"),cssClass:["exRed","exFont"]}));e.Popup.show({content:o,callback:()=>e.removeCssRules(".exRed",".exFont")})},fnEx2:o=>{e.fn("colorRed",s=>(s[0].style.color="red",s));let t=e.virtual('<div data-id="tmpEx">Hello world</div>');l.show({content:t.append(e("<div>There we have it</div>").colorRed()),callback:t.remove})},valEx:o=>{let t=e('<input data-id="tmpEx" type="text" value="hello world">',o.target.closest(".description")),s=`Initial value <code>input.val()</code> => ${t.val()}<br>Empty it: <code>input.val("")</code> => ${t.val("").val()}<br>New value: <code>input.val("hi there")</code> => ${t.val("hi there").val()}`;l.show({content:s,callback:p})},htmlEx:o=>{let t=o.target.closest(".description"),s=e(`<div data-id="tmpEx">
          Hello <span>world</span>
        </div>`,t);setTimeout(()=>{e('[data-id="tmpEx"] span',t).html("universe!"),setTimeout(()=>e('[data-id="tmpEx"] span',t).html(" And bye again",!0),1e3)},1e3),setTimeout(()=>e('[data-id="tmpEx]',t).remove(),5500)},outerHTMLEx:o=>{let t=a('<div data-id="tmpEx"><b>Hello</b> <span>World</span>!</div>',o.target.closest(".description"));l.show({content:`<code>exElem.outerHtml.replace(/&lt;/g, "&amp;lt;")</code> =&gt; ${t.outerHtml.replace(/</g,"&lt;")}
                   <br><code>exElem.HTML.get(true, true)</code> =&gt; ${t.HTML.get(!0,!0)}`,callback:()=>t.remove()})},propEx:o=>{let t=e('<div data-id="tmpEx"><b>Hello</b> <span>World</span>!</div>',o.target.closest(".description"));t.prop({title:"now I have a title",onclick:'javascript:alert("hello!")'}),l.show({content:`<code>exElem.prop("title")</code> =&gt; ${t.prop("title")}
        <br><code>exElem.prop("onclick")</code> =&gt; ${t.prop("onclick")}`,closeAfter:4}),setTimeout(()=>t.remove(),1e4)},removeClassEx:o=>{e.setStyle(".exTest { color: red; font-weight: bold; }");let t=e('<div data-id="tmpEx"><b>Hello</b> <span class="exTest">World</span>!</div>',o.target.closest(".description"));setTimeout(()=>{t.find$("span").removeClass("exTest"),setTimeout(()=>t.remove(),2500)},1500)},getDataEx:o=>{let t=e(o.target),s=t.getData("action"),d=t.getData("nonexistent"),r=t.getData("nothing","NOCANDO");l.show({content:[`<code>action</code>: "${s}"`,`<code>undef</code>: ${d}`,`<code>undefWithDefaultValue</code>: "${r}"`].join("<br>")})},editCssRuleEx:o=>{let t=o.target.closest(".description"),s=()=>setTimeout(()=>{e("#div1, #div2").remove(),e.removeCssRule("#div1"),e.removeCssRule("#div2")},3e3);e.editCssRule("#div1 {margin: 0.3rem; color: green; background-color: #EEE; }"),e.editCssRule("#div2",{margin:"0.3rem",color:"red",backgroundColor:"#EEE"});let d=e.virtual('<div id="div1">I am div#div1</div>'),r=e.virtual('<div id="div2">I am div#div2</div>');l.show({content:e.virtual("<div>").append(d,r),callback:()=>e.removeCssRule("#div1","#div2")})},editCssRulesEx:()=>{let o=e.virtual('<div id="div1">I am div#div1</div>'),t=e.virtual('<div id="div2">I am div#div2</div>');e.editCssRules("#div1 {margin: 0.3rem; color: green; background-color: #EEE; }","#div2 {margin: 0.3rem; color: red; background-color: #EEE; }"),l.show({content:e.virtual("<div>").append(o,t),callback:()=>e.removeCssRule("#div1","#div2")})},removeCssRulesEx:()=>{let o=e.virtual('<div id="div1">I am div#div1</div>'),t=e.virtual('<div id="div2">I am div#div2</div>');e.editCssRules("#div1 {margin: 0.3rem; color: green; background-color: #EEE; }","#div2 {margin: 0.3rem; color: red; background-color: #EEE; }"),l.show({content:e.virtual("<div>").append(o,t),callback:()=>{e.removeCssRule("#div1","#div2");let s=[...e.node("#JQLStylesheet",document.documentElement).sheet.cssRules].filter(d=>d.cssText.startsWith("#div1")||d.cssText.startsWith("#div2"));l.show({content:`Rules removed, so we expect <code>rulesExist?.cssText</code> to be undefined. 
                 Is that so? ${i(s?.cssText)}`,closeAfter:5})}})},removeCssRuleEx:()=>{let o=e.virtual('<div id="div1">I am div#div1</div>'),t=e.virtual('<div id="div2">I am div#div2</div>');e.editCssRule("#div1 {margin: 0.3rem; color: green; background-color: #EEE; }"),l.show({content:e.virtual("<div>").append(o,t),callback:()=>{e.removeCssRule("#div1","#div2");let s=[...e.node("#JQLStylesheet",document.documentElement).sheet.cssRules].filter(d=>d.cssText.startsWith("#div1"));l.show({content:`Rule removed, so we expect <code>rulesExist?.cssText</code> to be undefined. 
                 Is that so? ${i(s?.cssText)}`,closeAfter:5})}})},virtualEx:o=>{let t=e.node(".virtual"),s=o.target.closest(".description");t&&t.remove();let d=m=>m.isVirtual?"Nope":"Yep",r=e.virtual('<div class="virtual" data-id="tmpEx">Hello</div>').append(e.virtual("<span> world!</span>").style({color:"green",fontWeight:"bold"}));l.show({content:e("<div>virtual element created. In DOM tree? </div>").append(` <b>${d(r)}.</b>`).append(" We'll add it to this chapter soon."),closeAfter:2.5,callback:()=>{r.toDOM(s).append(`<b> In DOM tree? ${d(r)}</b>`)}}),setTimeout(()=>r.remove(),7500)},toggleClassEx:o=>{if(!e(o.target.closest(".description")).find$(".divExClass").is.empty)return;let t=()=>{e.removeCssRule(".redEx"),e.removeCssRule("button#toggleColor, button#cleanup")};e.editCssRule(".redEx { color: red; }"),e.editCssRule("button#toggleColor, button#cleanup { margin: 0 5px; }");let s=e('<div class="divExClass redEx">Hello World!</div>',o.target.closest(".description"));s.append(e.virtual('<button id="toggleColor">toggle</button>').on("click",(d,r)=>e(r[0].closest(".divExClass")).toggleClass("redEx"))),s.append(e.virtual('<button id="cleanup">remove</button>').on("click",(d,r)=>{r[0].closest(".divExClass").remove(),t()}))},replaceClassEx:o=>{let t=e('<div class="divExClass">Hello World!</div>',o.target.closest(".description")),s=()=>{t.remove(),e.removeCssRule(".redEx"),e.removeCssRule(".redExUl")};e.editCssRule(".redEx { color: red; }"),e.editCssRule(".redExUl { text-decoration: underline; }"),setTimeout(()=>{t.replaceClass("divExClass","redEx","redExUl"),setTimeout(s,2e3)},1500)},ISEx:o=>{let t={Object:{say:"hello"},Array:[1,2,3],RegExp:/[a-z]/gi,Null:null,Undefined:void 0,Zero:0,Symbol:Symbol("symbol1")},s=m=>e.IS(m,void 0,NaN,null),d=m=>e.IS(m),r=Object.keys(t).reduce((m,v)=>[...m,`<code>whatIs(someVars.${v})</code>: ${d(t[v])}`],[]);l.show({content:r.concat([`<code>$.IS(someVars.Object, Object)</code>: ${e.IS(t.Object,Object)}`,`<code>$.IS(someVars.Object, Array)</code>: ${e.IS(t.Object,Array)}`,`<code>$.IS(someVars.Object, String, Object, Array)</code>: ${e.IS(t.Object,String,Object,Array)}`,`<code>$.IS(someVars.Array, Array)</code>: ${e.IS(t.Array,Array)}`,`<code>$.IS(someVars.Array, Object)</code>: ${e.IS(t.Array,Object)}`,`<code>$.IS(someVars.RegExp, RegExp)</code>: ${e.IS(t.RegExp,RegExp)}`,`<code>$.IS(someVars.Null, undefined)</code>: ${e.IS(t.Null,void 0)}`,`<code>$.IS(someVars.Null, null)</code>: ${e.IS(t.Null,null)}`,`<code>$.IS(someVars.Zero, Boolean)</code>: ${e.IS(t.Zero,Boolean)}`,`<code>$.IS(someVars.Symbol, Symbol)</code>: ${e.IS(t.Symbol,Symbol)}`,`<code>isNothing(someVars.Undefined)</code>: ${s(t.Undefined)}`,`<code>isNothing(someVars.RegExp)</code>: ${s(t.RegExp)}`]).join("<br>")})},singleEx:o=>{e(`<div data-id="tmpEx">
           <div class="test">Hello world (1)</div>
           <div class="test">Hello world (2)</div>
        </div>`,o.target,e.insertPositions.AfterEnd),l.show({content:`<code>$("[data-id='tmpEx']").<b>single(".test")</b>.outerHtml.replace(/&lt;/g, "&amp;lt;")</code><br>
          ${e("[data-id='tmpEx']").single(".test").outerHtml.replace(/</g,"&lt;")}`,callback:p})},singleEx2:o=>{e(`<div data-id="tmpEx">
           <div class="test">Hello world (1)</div>
           <div class="test">Hello world (2)</div>
        </div>`,o.target,e.insertPositions.AfterEnd),l.show({content:`<code>$("[data-id='tmpEx']").<b>single()</b>.outerHtml.replace(/&lt;/g, "&amp;lt;")</code><br>
          ${e("[data-id='tmpEx']").single().outerHtml.replace(/</g,"&lt;")}`,callback:p})},singleEx3:o=>{e(`<div data-id="tmpEx">
          <div class="test">Hello world (1)</div>
          <div class="test">Hello world (2)</div>
          <div class="test">Hello world (3)</div>
         </div>`,o.target,e.insertPositions.AfterEnd),l.show({content:`<code>$(".test").<b>single(1)</b>.outerHtml.replace(/&lt;/g, "&amp;lt;")</code><br>
          ${e(".test").single(1).outerHtml.replace(/</g,"&lt;")}`,callback:p})},htmlObjEx:o=>{let t=e.DIV.prop({id:"initial"}),s=t.HTML;s.set("'nough said").data.set({iteration:"set"});let d=`<code>set</code>: ${s.get(!0,!0)}`;s.replace("HELLO").data.set({iteration:"replace"});let r=`<code>replace</code>: ${s.get(!0,!0)}`;s.append(" WORLD").data.set({iteration:"append"});let m=`<code>append</code>: ${s.get(!0,!0)}`;s.insert(e.b("The obligatory ... ")).data.set({iteration:"insert"});let v=`<code>insert</code>: ${s.get(!0,!0)}`,b=e.virtual(`<div>
        Created <code>div#initial</code><br> 
        ${d}<br>${r}<br>${m}<br>${v}
        <h3>So, there we have it \u{1F60F}</h3></div>`).append(t.Style.byRule({rules:".tmp1234 { color: green; font-weight: bold; }"}));l.show({content:b})},toNodeListEx:o=>{let t=o.target.closest(".description");e('<div class="ex">**Initial</div>',t);let s=e(['<div id="some" class="ex">Hello</div>','<div id="thing" class="ex">World</div>'],t).toNodeList();for(let d of s)d.textContent+="!",d.style.color="red";e('<div class="ex">**Created from nodeList</div>',t),e(t).append(...s),setTimeout(()=>e(".ex").remove(),5e3)},htmlForEx:o=>{let t=e(`<div data-id="tmpEx">
          Hello <span><b>world</b></span> <span>etc.</span>
        </div>`,o.target.closest(".description"));setTimeout(()=>{l.show({content:t.duplicate(o.target.closest(".description")).htmlFor("span:first-child","<span><i><b>UNIVERSE</b></i></span>"),callback:()=>e('[data-id="tmpEx"]').remove(),closeAfter:5})},1500)},isEmptyEx:o=>{let t=e(`<div data-id="tmpEx">
        <b>Hello</b>! <span></span></div>`,o.target.closest(".description"));l.show({content:`<code>someDiv.isEmpty()</code> =&gt; ${t.isEmpty()}
        <br><code>someDiv.find$("span:first-child").isEmpty()</code> =&gt; ${t.find$("span:first-child").isEmpty()}`,callback:p})},replaceWithEx:()=>{let o=e.virtual('<div id="oldD">I shall be replaced...<div>'),t=e.virtual('<div id="newD">I have replaced div#oldD!<div>');l.show({content:o,closeAfter:3,callback:()=>l.show({content:o.replaceMe(t).style({color:"red"}),closeAfter:3})})},commentEx:o=>{let t=o.target.closest(".description");e([e.text("Some text added here"),e.comment("Some comment added here")],t);let s=[...t.childNodes].filter(d=>d.nodeValue?.trim().length&&[3,8].find(r=>d.nodeType===r));l.show({content:`<div><b>The created Nodes</b></div><div>${s.map(d=>d.nodeType===8?`&lt;!--${d.data}-->`:d.data).join("<br>")}</div>`,callback:()=>s.forEach(d=>d.remove())})},textOrCommentEx:o=>{let t=o.target.closest(".description");e([e.text("Some text added here"),e.text("Some comment added here",!0)],t);let s=[...t.childNodes].filter(d=>d.nodeValue?.trim().length&&[3,8].find(r=>d.nodeType===r));l.show({content:`<div><b>The created text nodes</b></div><div>${s.map(d=>d.nodeType===8?`&lt;!--${d.data}-->`:d.data).join("<br>")}</div>`,callback:()=>s.forEach(d=>d.remove())})},replaceEx:()=>{let o=e.virtual('<div>Hi there!<div class="oldD">I shall be replaced...</div><div class="oldD">Me Too!</div></div>'),t=e.virtual('<div>Formerly known as "div.oldD"<div>').style({color:"red"});l.show({content:o,closeAfter:3,callback:()=>l.show({content:o.replace(".oldD",t),closeAfter:3})})},lenEx:o=>{let t=e(`<p>There are <b>${e("h3").length}</b> &lt;h3>-elements within this document</p>`,o.target.closest(".description"));setTimeout(()=>t.remove(),4e3)},setDataEx:o=>{let t=e("<span>Hello world</span>",o.target.closest(".description"));e.setStyle("[data-goodbye]::after { content: '...'attr(data-goodbye); }"),setTimeout(()=>{t.setData({id:"temporary",goodbye:"and bye again"}),setTimeout(()=>e("[data-id='temporary']").remove(),2500)},1500)},appendToEx:o=>{e.setStyle("#tmpEx { color: blue; font-weight: normal; }"),e.setStyle("#tmpEx div {color: red; font-weight: bold}");let t=e('<p id="tmpEx">Hello World</p>',o.target.closest(".description")),s=a("<div>And bye again</div>");setTimeout(()=>s.appendTo(t),1500),setTimeout(()=>p("#tmpEx div"),2500)},duplicateEx:o=>{let t=o.target.closest(".description");e.setStyle(".someClass",{color:"brown"});let s=e('<div class="someClass">[hello]</div>',t).duplicate(!0,t);e(".someClass",t).append(" world!").prepend("We say: ").each(r=>r.setAttribute("id",`_${Math.floor(1e4+Math.random()*1e4).toString(16)}`)).duplicate(!0,t).replaceClass("someClass","tmp").text(" That's right folks. Bye!",!0);let d=e(".someClass, .tmp").collection.map(r=>e(r).HTML.get(1,1)).join("<br>");l.show({content:d,callback:()=>e(".someClass, .tmp").remove()})},hasClassEx:o=>{let t=e('<div class="one two tree">Hello world</div>',o.target.closest(".description"));l.show({content:`<code>tmpDiv.hasClass("one", "tree")</code> =&gt; ${t.hasClass("one","tree")}<br>
         <code>tmpDiv.hasClass("one", "four")</code> =&gt; ${t.hasClass("one","four")}<br>
         <code>tmpDiv.hasClass("five")</code> =&gt; ${t.hasClass("five")}`,callback:()=>e(".one.two").remove()})},staticAtEx:()=>{e.editCssRule("h3.hello, h2.hello { margin: 0.3rem 0 }");let o=e.virtual("<div>").append(e.virtual('<h3 class="hello">world</h3>'));e.virtual('<h2 class="hello">Hello</h2>',o.single(".hello"),e.at.BeforeBegin),l.show({content:o,callback:()=>e.removeCssRule("!h3.hello, h2.hello!")})},staticDelegateEx:o=>{e.delegate("click","#static_delegate",t=>{if(!t.target.dataset.after)return t.target.setAttribute("data-after","1"),e.editCssRule(`#${t.target.id}::after {
                content: " HI! My name is U.S.E. Less. Click to add or remove me...";
                color: green;
              }`);e.removeCssRule(`#${t.target.id}::after`),t.target.removeAttribute("data-after")}),e("#static_delegate").trigger("click"),e(o.target).attr("disabled","disabled")},clearEx:o=>{e.editCssRule('[data-id="tmpEx"] { color: green; font-weight: bold; }'),e.editCssRule(".metoo {color: red;}"),e([`<p data-id="tmpEx">I hope they won't remove this!</p>`,"<div class='metoo'>Me too!</div>"],o.target.closest(".description")),setTimeout(()=>e('[data-id="tmpEx"]').clear(),1500),setTimeout(()=>e(".metoo").text("They did it didn't they?"),2500),setTimeout(()=>{e(".metoo").remove(),p(".metoo")},6e3)},showHideEx:o=>{if(!e(o.target.closest(".description")).find$(".divExClass").is.empty)return;let t=d=>{d[0].closest(".divExClass").remove(),e.removeCssRule(".showHide"),e.removeCssRule("button#hide, button#show, button#cleanup")};e.editCssRule(".showHide { display: block; color: red; font-weight: bold; }"),e.editCssRule("button#hide, button#show, button#cleanup { margin-right: 5px; }");let s=e(`<div class="divExClass">
          <span class="showHide">Hello World!</span></div>`,o.target.closest(".description"));s.append(e.virtual('<button id="hide">hide</button>').on("click",d=>e(d.target.closest(".divExClass").querySelector(".showHide")).hide())),s.append(e.virtual('<button id="show">show</button>').on("click",d=>e(d.target.closest(".divExClass").querySelector(".showHide")).show())),s.append(e.virtual('<button id="cleanup">remove</button>').on("click",(d,r)=>t(r)))},cssEx:o=>{let t=o.target.closest(".description");e('<p data-id="tmpEx">Hello #1</p>',t).css({paddingLeft:"4px",color:"white",backgroundColor:"#000"});let s=[...e.node('[data-id="tmpEx"]')?.classList].shift();e('<p data-id="tmpEx" class="leftRedBorder">Hello #2</p>',t).css({className:"leftRedBorder",paddingLeft:"4px",color:"green",borderLeft:"12px solid red"}),l.show({content:`generated class name (first element): ${s}`,callback:()=>setTimeout(()=>p(".leftRedBorder",`.${s}`),2500)})},styleRulingsEx:o=>{let t=e.div("Hello").append(e.span(" world"));t.Style.byRule({classes2Apply:["test1","boring"],rules:[".test1 { color: green }",".boring {backgroundColor: #EEE;}"]}),e("span",t)?.Style.nwRule(".test2 { color: red; }"),l.show({content:e.div("This resulted in:").Style.nwRule("#test3 { color: blue; }").append(t),callback:()=>e.removeCssRule(".boring",".test1",".test2","#test3")})},styleObjInStyleEx:o=>{e.removeCssRule('[data-id="tmpEx"], #tmpEx');let t=e.P.attr({data:{id:"tmpEx"}}).Style.inline({paddingLeft:"4px",color:"white",backgroundColor:"#000"});t.append(e.div(`HTML of hello1: ${t.HTML.get(!0)}`));let s=e.P.addClass("leftRedBorder").attr({data:{id:"tmpEx"}}).Style.inSheet({className:"leftRedBorder",paddingLeft:"4px",color:"green",borderLeft:"12px solid red"});s.append(e.div(`HTML of hello2: ${s.HTML.get(!0)}`));let d=e.P.attr({data:{id:"tmpEx"}}).Style.inSheet({paddingLeft:"4px",color:"green",borderLeft:"12px solid green"});d.append(e.div(`HTML of hello3: ${d.HTML.get(!0)}`));let r=[...d[0]?.classList].shift(),m=e("<div>").html(`<code>hello3.Style.valueOf("borderLeftColor")</code>: ${d.toDOM().Style.valueOf("borderLeftColor")}.<br>&nbsp;<b>\u2937</b> Equivalent
          <code>hello3.Style.computed.borderLeftColor</code>: ${d.Style.computed.borderLeftColor}`),v=d.Style.computed,b=c(v.length,10)-10,S=`<div><br><code>hello3.Style.computed</code> 
        (10 of ${v.length} rules, random sample)<ul>${[...v].slice(b,b+10).map(k=>`<li>${k}: ${v[k]}</li>`).join("")}</ul></div>`.replace(/\n+\s{2,}/g," ");l.show({content:e.DIV.append(t,s,d,m,S),callback:()=>e.removeCssRules(`.${r}, .leftRedBorder`)})},attrEx:o=>{let t=o.target.closest(".description"),s=e('<div data-id="tmpEx" class="initial">Hi, let me get some attributes</div>',t);s.attr({title:"Yes, I have a title now!",class:"volatile",data:{myTitle:"title as data"}});let[d,r,m,v,b]=[s.attr("data-id"),s.attr("title"),s.attr("class"),s.attr("data-my-title"),s.attr("onclick")];l.show({content:[`<code>someDiv.attr(\`data-id\`)</code>: ${d}`,`<code>someDiv.attr(\`data-my-title\`)</code>: ${v}`,`<code>someDiv.attr(\`title\`)</code>: ${r}`,`<code>someDiv.attr(\`class\`)</code>: ${m}`,`<code>someDiv.attr(\`onclick\`)</code>: ${b}`].join("<br>"),callback:p})},computedStyleEx:o=>{e.setStyle(".redEx {color: red; font-weight: bold}"),e('<p class="redEx">Hello!</p>',o.target.closest(".description")),l.show({content:`<code>$(".redEx").computedStyle("color")</code>: ${e(".redEx").computedStyle("color")}
        <br><code>$(".redEx").computedStyle("font-weight")</code>: ${e(".redEx").computedStyle("font-weight")}`,callback:()=>{e.removeCssRule(".redEx"),e(".redEx").remove()}})},dimEx:o=>{let t=e('<p data-id="tmpEx">Hello, where am I at the moment?</p>',o.target.closest(".description")).style({color:"red",fontWeight:"bold"}),s=JSON.stringify(t.dimensions,null,2).replace(/[}{"]/g,"").trim().replace(/\n/g,"<br>");l.show({content:s,callback:()=>t.remove()})},findEx:()=>l.show({content:e(".docs").find("#instance_find")[0]?.outerHTML.replace(/</g,"&lt;")}),find_D_Ex:()=>l.show({content:e(".docs").find$("#instance_find_D").HTML.get(1,1)}),firstEx:o=>{let t=e("#navigation li[data-key]");l.show({content:e(`<div>
         <code>jqlElems.collection.length</code>: ${t.collection.length},<br>
         outerHTML <code>jqlElems.first()</code>: ${t.first()?.outerHTML.replace(/</g,"&lt;")}</div>`)})},first$Ex:o=>{let t=e(".docs").first$("#instance_first_D"),s=()=>{l.show({content:`<code>$(\`.docs h3\`).first$(17)</code> =&gt;<br>${e(".docs h3").first$(17).HTML.get(1,1)}`})};l.show({content:`<div><code>$(\`.docs\`).first$(\`#instance_first_D\`)</code> =&gt;<br>${t.HTML.get(1,1)}</div>`,callback:s})},first$Ex2:o=>{let t=e(".docs").first$(30001);l.show({content:`<div>non existing (should be <code>undefined</code>): ${t.outerHtml}</div>`})},dataEx:o=>{let t=e("<div>Hello World again</div>",o.target.closest(".description"));e.editCssRule("[data-is-universe]:after {content: ' ... and the universe!'; color: red;}"),t.data.add({isUniverse:!0,something:"else","dashed-prop-given":1}),l.show({content:`<code>helloWrld.data.all</code> =&gt; ${JSON.stringify(t.data.all)}
          <br><code>helloWrld.data.get("something")</code> =&gt; ${t.data.get("something")}
          <br><code>helloWrld.data.all.isUniverse</code> =&gt; ${t.data.all.isUniverse}
          <br><code>helloWrld.data.all["is-universe]</code> =&gt; ${t.data.all["is-universe"]}
          <br><code>helloWrld.data.get("is-universe")</code> =&gt; ${t.data.get("is-universe")}
          <br><code>helloWrld.data.get("isUniverse")</code> =&gt; ${t.data.get("isUniverse")}
          <br><code>helloWrld.data.get("dashed-prop-given")</code> =&gt; ${t.data.get("dashed-prop-given")}
          <br><code>helloWrld.data.all.nonexisting</code> =&gt; ${t.data.all.nonexisting}
          <br><code>helloWrld.data.get("nonexisting", "no sir, I'm not here")</code> =&gt; ${t.data.get("nonexisting","no sir, I'm not here")}`,callback:()=>{t.data.remove("isUniverse"),setTimeout(()=>{e.removeCssRule("[data-is-universe]:after"),t.remove()},3500)}})},eachEx:()=>{let o=e(".methodName"),t="rgb(165, 42, 42)",s=o.computedStyle("color");o.each(d=>e(d).style({color:s===t?"":t}))},clickNavGroup:(o,t)=>{let s=!e(t).hasClass("closed");e(".navGroup").each(d=>e(d).addClass("closed")),e.node(`#${t.dataset.group}_About`).scrollIntoView(),e(".selected").removeClass("selected"),e("ul.navGroupItems li:first-child div[data-navitem]",t).addClass("selected"),u(),!s&&t.classList.remove("closed")},clickNavItem:o=>(e(".navGroup").each(t=>e(t).addClass("closed")),e(o.target.closest(".navGroup")).removeClass("closed"),e.node(o.target.dataset.navitem).scrollIntoView(),e(".selected").removeClass("selected"),e(o.target).addClass("selected"),u()),jumpTo:o=>{let t=e(`[data-navitem='#${o}']`);t.trigger("click"),t[0].offsetTop>e.node("#navigation").offsetHeight&&t[0].scrollIntoView()},jump2Nav:o=>{let t=o.target.dataset.jumpgroup,s=o.target.dataset.jumpkey;e(t?`[data-group='${t}']`:`[data-navitem='#${s}']`).trigger("click")}}}var y=location.host.startsWith("dev"),j=y?"../index.js":"../../Bundle/jql.min.js",n=(await import(j)).default,A=performance.now();document.title=y?`##DEV## ${document.title}`:document.title;y&&(n("head").append(n.LINK.attr({href:"/favNICon.ico",rel:"icon"})),window.jql=n,window.IS=n.IS,window.popup=n.Popup);n.log("Start documenter...");var M=(e,i=0)=>([e,i]=[Math.floor(e),Math.ceil(i)],Math.floor(crypto.getRandomValues(new Uint32Array(1))[0]/2**32*(e-i+1)+i)),C=await fetch(`./documentation.json?v=${M(1e4,1e3)}`).then(e=>e.json());n.log("Fetched documenter json...");f(n);n.log("Applied styling...");var N=["jql_About","static_About","instance_About","popup_About","debuglog_About"],O=N.reduce((e,i)=>[...e,{name:i,displayName:i.slice(0,i.indexOf("About")).toUpperCase()}],[]),R=e=>e.slice(e.indexOf("_")+1),W=({group:e,displayName:i})=>{let c=n(`<ul class="navGroup closed" data-group="${i.toLowerCase()}"/>`,n.node("#navigation"));return c.append(n(`<li class="grouped">${i}<ul class="navGroupItems"></ul></li>`)),Object.keys(C).filter(a=>a.startsWith(e.displayName.toLowerCase())).sort((a,l)=>a.localeCompare(l)).forEach(a=>{let l=a.replace(/([a-z])\$/gi,"$1_D");n(".navGroupItems",c[0]).append(n(`<li data-key="${l}"><div data-navitem="#${l}">${R(a)}</div></li>`))}),i},w=n.node(".docs"),I=H(n);n.delegate("click",I);n.delegate("scroll",".docs",I);var _=(e,i)=>`<div class="exContainer"><h3 class="example">Example${i>0?` ${i+1}`:""}</h3><pre class="language-javascript"><code class="js language-javascript line-numbers">${e.trim().replace(/</g,"&lt;").replace(/>/g,"&gt;")}</code></pre></div>`,G=e=>{let i=/(?<=<example>)(.|\n)*?(?=<\/example>)/gm,c=(e.match(i)||[]).map((a,l)=>_(a,l));return e.replace(/<example>(.|\n)*?<\/example>/g,()=>c.shift())};var T=e=>e.replace(/</g,"&lt;").replace(/&lt;code/g,"<code").replace(/&lt;\/code/g,"</code"),P=e=>{let i=e.displayName.slice(0,-1);return n(`<h3 class="groupHeader" id="${e.name}">${i}</h3>`,w),i},V=e=>Object.entries(e).map(([i,c])=>{let a=/_isobject/i.test(i)?"[Object&lt;string, any>]":i;return`<div class="param"><code>${T(a)}</code>: ${T(c)}</div>`});O.forEach(e=>{let i=W({group:e,displayName:P(e)});Object.entries(C).filter(([c,a])=>c.startsWith(`${e.displayName.toLowerCase()}`)).sort(([c],[a])=>c.localeCompare(a)).forEach(([c,a])=>{a.description=a.description.trim();let l=R(c),g="<span/>",u=[],h={instance:"[JQL instance].",popup:"[JQL.popup()].",debuglog:"[debugLog].",static:"[JQL]."};if(a.params?.length&&(g=`<div><b>Parameters</b>${a.params.reduce((p,x)=>[...p,V(x)],[]).join("")}</div>`),/<example>/.test(a.description)&&(a.description=G(a.description)),l==="About")return n(`<div data-groupContainer="${i}" class="description">${a.description.replace(/\n{3,}/g,`
`)}</div>`,w);n([`<h3 class="methodName" id="${c.replace(/([a-z])\$/gi,"$1_D")}"><span class="group">${h[c.slice(0,c.indexOf("_"))]}</span>${l}</h3>`,g,`<div class="returnValue"><b>Returns</b>: ${a.returnValue}</div>`,`<div class="description">${a.description.replace(/\n{2,}/g,`
`)}</div>`],w)})});n.log("Documenter json parsed to DOM.");C=null;n(".docs").removeClass("loading");n("code.js").each(e=>Prism.highlightElement(e));n.log("Code formatting done.");n("#jql_About").html(' (<span class="jqlTitle"><b>JQ</b>uery<b>L</b>ike</span>)',!0);n('[data-group="jql"]').trigger("click");n.log("Navigation triggered.");n.log(`Documenter implementation took ${Math.round(performance.now()-A)}Ms`);
