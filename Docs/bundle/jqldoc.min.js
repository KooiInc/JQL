function w(e){e.editCssRules("body{font:normal 12px/15px Verdana,Arial,sans-serif;overflow:hidden;}","#navigation{position:fixed;overflow-y:auto;top:1em;bottom:0;}","#navgation,.doc{scrollbar-width:none;-ms-overflow-style:none;}","#navigation::-webkit-scrollbar,.docs::-webkit-scrollbar{width:0;height:0;}",".docs{position:absolute;top:1em;bottom:0;left:7vw;padding-bottom:100rem;padding-left:1rem;max-width:40vw;overflow:auto;}",'.docs.loading:before{content:"Loading ...";font-size:3rem;font-weight:bold;color:red;display:block;margin-top:2rem;z-index:5;}',".navGroup{cursor:pointer;margin-left:-1.2rem;margin-block-start:0.5em;}","ul.navGroup.closed li.grouped{list-style:'\\25BC';}","ul.navGroup li.grouped{padding-left:0.2rem;list-style:'\\25b2';color:brown;}","ul.navGroup.closed li ul.navGroupItems{display:none;}","ul.navGroup li:not(.grouped){list-style:none;padding-left:0.2rem;margin-left:-2rem;margin-top:0.1rem;}",".jqlTitle{color:green;}",".jqlTitle b{color:red;}",".selected{color:blue;font-weight:bolder;}","ul.navGroupItems li{color:#777;}","[data-key]{color:#777;}","[data-key]:hover{background-color:#eee;}","[data-groupcontainer]{border:1px solid #aaa;padding:1.5rem 1rem 1rem;box-shadow:2px 2px 8px #999;border-radius:5px;max-width:96%;}",".linkLike,.linkLike code{color:blue;cursor:pointer;display:inline-block;}",".linkLike:hover{text-decoration:underline;}",'.methodName{margin-bottom:0.5rem;color:blue;font-size:1.2rem;font-family:"Courier New",serif;cursor:pointer;}',".exRunBttn[disabled]{background-color:buttonface;border-width:1px;}",".groupHeader{min-width:100px;max-width:200px;text-align:center;border:1px solid green;padding:5px;border-radius:5px;background-color:#eee;margin:0 auto -1.4rem auto;position:relative;}",".groupHeader:first-child{margin-top:1em;}",".groupHeader:not(:first-child){margin-top:2rem;}",".returnValue,.description{margin-top:0.6rem;}",".description{white-space:pre-line;}",".description .template{display:none;}",".description ul{margin:0 0 -0.4rem -1.2rem;}",".description ul ul{margin:0 0 -1.5rem -1.2rem;}",".description ul ul li{list-style:'\\2714';margin-left:-0.7rem;}",".description ul li{list-style:'\\2705';margin-top:-0.7rem;padding-left:0.2rem;}",".example{margin-left:0.5rem;margin-bottom:-0.2rem;}",".exContainer{white-space:revert;margin-top:-0.6rem;}",".exRunBttn{position:relative;display:block;margin:-1.8rem 0 1rem 1rem;}",".exRunBttn + div,.exContainer + div{margin-top:-1rem;}","code:not(.js){color:green;background-color:#EEE;display:inline-block;padding:1px;}","code b{color:red;}","img.gitLink{width:32px;height:32px;margin-right:4px;vertical-align:middle;}","@media (max-width:2200px){.docs{max-width:65vw;left:10vw;}}","@media (max-width:1440px){.docs{max-width:75vw;left:13vw;}}","@media (max-width:1024px){.docs{left:16vw;max-width:80vw;}}","@media (max-width:800px){.docs{left:24vw;max-width:70vw;}}")}var T=M;function M(e){let d=S(e);return e.editCssRules('[data-id="tmpEx"], #tmpEx { white-space: normal; padding-top: 5px;}',".test { color: red; }"),function(s){let c=!s.target?.closest?.("[data-key]")&&s.target.closest(".navGroup"),u=s.target?.closest?.(".methodName"),v=s.target?.dataset?.action,x=s.target?.dataset?.navitem;if(c)return d.clickNavGroup(s,c);if(x)return d.clickNavItem(s);if(u)return d.jumpTo(u.id);if(v&&d[v])return d[v](s)}}function S(e){let d=(o,t=0)=>([o,t]=[Math.floor(o),Math.ceil(t)],Math.floor([...crypto.getRandomValues(new Uint32Array(1))].shift()/4294967296*(o-t+1)+t)),a=e.virtual,s=e.popup(),c=e.node(".docs"),u=()=>c.scrollBy(0,-15),v=()=>{let o=a('<button id="modalCloseTest">Close me</button>').on("click",()=>s.removeModal()),t=()=>s.show({content:"Modal closed, you're ok, bye.",closeAfter:2}),l=a(e("[data-popup2]").html()).append(a("<p/>").append(o));s.show({content:l,modal:!0,callback:t,warnMessage:"There's only one escape here!"})},x=()=>{let o=a('<button id="modalCloseTest">Close me</button>').on("click",()=>s.removeModal()),t=()=>s.show({content:"Modal closed, you're ok, bye.",closeAfter:2}),l=a(e("[data-popup2]").html()).append(a("<p/>").append(o));s.show({content:l,modal:!0,callback:t,warnMessage:'"In other words: <i>you can only close this using the <b>button</b> ...</i>"'})},p=(...o)=>setTimeout(()=>{e('#tmpEx, [data-id="tmpEx"]').remove(),o.length&&e.removeCssRule(...o)},2500),b=()=>e.setStyle("#tmpEx {color: green; font-weight: bold;}");return{popupTimed:()=>s.show({content:e("[data-popup3]").html(),closeAfter:5}),popupModal:v,modalPopupShowDemo:x,popup:()=>s.show({content:a(e("[data-popup1]").outerHtml)}),popupShow:()=>s.show({content:a(e("[data-popup1]").outerHtml)}),addClassEx:o=>{e("#tmpEx").remove(),e.setStyle("#tmpEx.warnUser {color: red; font-weight: bold;}"),e.setStyle(".user:before {content: 'Hi user! ';}"),e('<div id="tmpEx">This is not very useful</div>',o.target.closest(".description")).addClass("warnUser","user"),p()},appendEx:o=>{e("#tmpEx").remove(),b(),e.editCssRule(".appended { color: red; }"),e('<div id="tmpEx">Hi there!</div>',o.target.closest(".description")).append('<div class="appended">I am the appended one ...</div>'),p(".appended")},isEx:o=>{let t=e('<input id="disabledInput" disabled type="text" placeholder="I am not enabled">',o.target.closest(".description")),l=t.is,i=[`visible? ${l.visible}`,`disabled? ${l.disabled}`,`writable? ${l.writable}`];s.show({content:`<code>${e("#disabledInput").outerHtml.replace(/</g,"&lt;")}</code>
        <p>${i.join("<br>")}</p>`,callback:()=>t.remove()})},chainEx:o=>{e("#tmpEx").remove(),b(),e('<div id="tmpEx">Hello world.</div>',o.target.closest(".description")).addClass("helloworld").append("<span> And the rest of the universe ... </span>").text(" (will disappear shortly)",!0),p()},htmlEx:o=>{let t=o.target.closest(".description"),l=e(`<div data-id="tmpEx">
          Hello <span>world</span>
        </div>`,t);setTimeout(()=>{e('[data-id="tmpEx"] span',t).html("universe!"),setTimeout(()=>e('[data-id="tmpEx"] span',t).html(" And bye again",!0),1e3)},1e3),setTimeout(()=>e('[data-id="tmpEx]',t).remove(),5500)},outerHTMLEx:o=>{let t=a('<div data-id="tmpEx"><b>Hello</b><span>World</span>!</div>',o.target.closest(".description"));s.show({content:`<code>exElem.outerHtml</code> =&gt; ${t.outerHtml.replace(/</g,"&lt;")}`})},propEx:o=>{let t=e('<div data-id="tmpEx"><b>Hello</b> <span>World</span>!</div>',o.target.closest(".description"));t.prop("title","now I have a title"),t.prop("onclick",'javascript:alert("hello!")'),s.show({content:`<code>exElem.prop("title")</code> =&gt; ${t.prop("title")}
        <br><code>exElem.prop("onclick")</code> =&gt; ${t.prop("onclick")}`,closeAfter:4}),setTimeout(()=>t.remove(),1e4)},removeClassEx:o=>{e.setStyle(".exTest { color: red; font-weight: bold; }");let t=e('<div data-id="tmpEx"><b>Hello</b> <span class="exTest">World</span>!</div>',o.target.closest(".description"));setTimeout(()=>{t.find$("span").removeClass("exTest"),setTimeout(()=>t.remove(),2500)},1500)},getDataEx:o=>{let t=e(o.target),l=t.getData("action"),i=t.getData("nonexistent"),r=t.getData("nothing","NOCANDO");s.show({content:[`<code>action</code>: "${l}"`,`<code>undef</code>: ${i}`,`<code>undefWithDefaultValue</code>: "${r}"`].join("<br>")})},editCssRuleEx:o=>{let t=o.target.closest(".description"),l=()=>setTimeout(()=>{e("#div1, #div2").remove(),e.removeCssRule("#div1"),e.removeCssRule("#div2")},3e3);e.editCssRule("#div1 {margin: 0.3rem; color: green; background-color: #EEE; }"),e.editCssRule("#div2",{margin:"0.3rem",color:"red",backgroundColor:"#EEE"});let i=e.virtual('<div id="div1">I am div#div1</div>'),r=e.virtual('<div id="div2">I am div#div2</div>');s.show({content:e.virtual("<div>").append(i,r),callback:()=>e.removeCssRule("#div1","#div2")})},editCssRulesEx:()=>{let o=e.virtual('<div id="div1">I am div#div1</div>'),t=e.virtual('<div id="div2">I am div#div2</div>');e.editCssRules("#div1 {margin: 0.3rem; color: green; background-color: #EEE; }","#div2 {margin: 0.3rem; color: red; background-color: #EEE; }"),s.show({content:e.virtual("<div>").append(o,t),callback:()=>e.removeCssRule("#div1","#div2")})},removeCssRulesEx:()=>{let o=i=>i===void 0?"Yep \u{1F60E}":"Nope \u{1F621}",t=e.virtual('<div id="div1">I am div#div1</div>'),l=e.virtual('<div id="div2">I am div#div2</div>');e.editCssRules("#div1 {margin: 0.3rem; color: green; background-color: #EEE; }","#div2 {margin: 0.3rem; color: red; background-color: #EEE; }"),s.show({content:e.virtual("<div>").append(t,l),callback:()=>{e.removeCssRule("#div1","#div2");let i=[...e.node("#JQLStylesheet",document.documentElement).sheet.cssRules].filter(r=>r.cssText.startsWith("#div1")||r.cssText.startsWith("#div1"));s.show({content:`Rules removed, so we expect <code>rulesExist?.cssText</code> to be undefined. 
                 Is that so? ${o(i?.cssText)}`,closeAfter:5})}})},virtualEx:o=>{let t=()=>e.node(".virtual")?"Yep":"Nope",l=e.node(".virtual");l&&l.remove();let i=o.target.closest(".description"),r=e.virtual('<div class="virtual" data-id="tmpEx">Hello</div>').append(e.virtual("<span> world!</span>").style({color:"green",fontWeight:"bold"}));s.show({content:`virtual element created. In DOM tree? ${t()}. We'll add it to this chapter soon`,closeAfter:2.5,callback:()=>r.toDOM(i).append(e(`<div>in DOM tree? ${t()}</div>`))}),setTimeout(()=>r.remove(),7500)},toggleClassEx:o=>{if(!e(o.target.closest(".description")).find$(".divExClass").is.empty)return;let t=()=>{e.removeCssRule(".redEx"),e.removeCssRule("button#toggleColor, button#cleanup")};e.editCssRule(".redEx { color: red; }"),e.editCssRule("button#toggleColor, button#cleanup { margin: 0 5px; }");let l=e('<div class="divExClass redEx">Hello World!</div>',o.target.closest(".description"));l.append(e.virtual('<button id="toggleColor">toggle</button>').on("click",(i,r)=>e(r[0].closest(".divExClass")).toggleClass("redEx"))),l.append(e.virtual('<button id="cleanup">remove</button>').on("click",(i,r)=>{r[0].closest(".divExClass").remove(),t()}))},replaceClassEx:o=>{let t=e('<div class="divExClass">Hello World!</div>',o.target.closest(".description")),l=()=>{t.remove(),e.removeCssRule(".redEx"),e.removeCssRule(".redExUl")};e.editCssRule(".redEx { color: red; }"),e.editCssRule(".redExUl { text-decoration: underline; }"),setTimeout(()=>{t.replaceClass("divExClass","redEx","redExUl"),setTimeout(l,2e3)},1500)},singleEx:o=>{e(`<div data-id="tmpEx">
           <div class="test">Hello world (1)</div>
           <div class="test">Hello world (2)</div>
        </div>`,o.target,e.insertPositions.AfterEnd),s.show({content:`<code>$("[data-id='tmpEx']").<b>single(".test")</b>.outerHtml.replace(/&lt;/g, "&amp;lt;")</code><br>
          ${e("[data-id='tmpEx']").single(".test").outerHtml.replace(/</g,"&lt;")}`,callback:p})},singleEx2:o=>{e(`<div data-id="tmpEx">
           <div class="test">Hello world (1)</div>
           <div class="test">Hello world (2)</div>
        </div>`,o.target,e.insertPositions.AfterEnd),s.show({content:`<code>$("[data-id='tmpEx']").<b>single()</b>.outerHtml.replace(/&lt;/g, "&amp;lt;")</code><br>
          ${e("[data-id='tmpEx']").single().outerHtml.replace(/</g,"&lt;")}`,callback:p})},singleEx3:o=>{e(`<div data-id="tmpEx">
          <div class="test">Hello world (1)</div>
          <div class="test">Hello world (2)</div>
          <div class="test">Hello world (3)</div>
         </div>`,o.target,e.insertPositions.AfterEnd),s.show({content:`<code>$(".test").<b>single(1)</b>.outerHtml.replace(/&lt;/g, "&amp;lt;")</code><br>
          ${e(".test").single(1).outerHtml.replace(/</g,"&lt;")}`,callback:p})},htmlObjEx:o=>{let t=e.virtual("<div>'nough said</div>"),l=t.HTML,i=`created <code>emptyEl</code>: ${l.get(!0,!0)}`;l.replace("HELLO");let r=`<code>replace</code>: ${l.get(!0,!0)}`;l.append(a("<span> WORLD</span>"));let m=`<code>append</code>: ${l.get(!0,!0)}`,g=`<code>insert</code>: ${l.insert(a("<b>the obligatory ... </b>")).HTML.get(!0,!0)}`,h=e.virtual(`<div>${i}<br>${r}<br>${m}<br>${g}<br>So, there we have it \u{1F60F}</div>`).append(t);s.show({content:h})},toNodeListEx:o=>{let t=o.target.closest(".description");e('<div class="ex">**Initial</div>',t);let l=e(['<div id="some" class="ex">Hello</div>','<div id="thing" class="ex">World</div>'],t).toNodeList();for(let i of l)i.textContent+="!",i.style.color="red";e('<div class="ex">**Created from nodeList</div>',t),e(t).append(...l),setTimeout(()=>e(".ex").remove(),5e3)},htmlForEx:o=>{let t=e(`<div data-id="tmpEx">
          Hello <span>world</span>
        </div>`,o.target.closest(".description"));setTimeout(()=>{e('[data-id="tmpEx"]').htmlFor("span:first-child","universe!"),setTimeout(p,2500)},1500)},isEmptyEx:o=>{let t=e(`<div data-id="tmpEx">
        <b>Hello</b>! <span></span></div>`,o.target.closest(".description"));s.show({content:`<code>someDiv.isEmpty()</code> =&gt; ${t.isEmpty()}
        <br><code>someDiv.find$("span:first-child").isEmpty()</code> =&gt; ${t.find$("span:first-child").isEmpty()}`,callback:p})},replaceMeEx:o=>{let t=o.target.closest(".description"),l=e.virtual('<div id="oldD">I shall be replaced...<div>',t),i=e.virtual('<div id="newD">I have replaced div#oldD!<div>');s.show({content:l,closeAfter:3,callback:()=>s.show({content:l.replaceMe(i).style({color:"red"}),closeAfter:3})})},lenEx:o=>{let t=e(`<p>There are <b>${e("h3").length}</b> &lt;h3>-elements within this document</p>`,o.target.closest(".description"));setTimeout(()=>t.remove(),4e3)},setDataEx:o=>{let t=e("<span>Hello world</span>",o.target.closest(".description"));e.setStyle("[data-goodbye]::after { content: '...'attr(data-goodbye); }"),setTimeout(()=>{t.setData({id:"temporary",goodbye:"and bye again"}),setTimeout(()=>e("[data-id='temporary']").remove(),2500)},1500)},appendToEx:o=>{e.setStyle("#tmpEx { color: blue; font-weight: normal; }"),e.setStyle("#tmpEx div {color: red; font-weight: bold}");let t=e('<p id="tmpEx">Hello World</p>',o.target.closest(".description")),l=a("<div>And bye again</div>");setTimeout(()=>l.appendTo(t),1500),setTimeout(p,4e3)},duplicateEx:o=>{let t=o.target.closest(".description");e.setStyle(".someClass",{color:"brown"}),e('<div class="someClass">hello</div>',t).duplicate(!0,t),e(".someClass",t).append(e.text(" world!")).prepend(e.text("We say: ")).each(l=>l.setAttribute("id",`_${Math.floor(1e4+Math.random()*1e4).toString(16)}`)).duplicate(!0,t).removeClass("someClass").addClass("tmp").text(" That's right folks. Bye!",!0),setTimeout(()=>e(".someClass, .tmp").remove(),5e3)},hasClassEx:o=>{let t=e('<div class="one two tree">Hello world</div>',o.target.closest(".description"));s.show({content:`<code>tmpDiv.hasClass("one", "tree")</code> =&gt; ${t.hasClass("one","tree")}<br>
         <code>tmpDiv.hasClass("one", "four")</code> =&gt; ${t.hasClass("one","four")}<br>
         <code>tmpDiv.hasClass("five")</code> =&gt; ${t.hasClass("five")}`,callback:()=>e(".one.two").remove()})},staticAtEx:()=>{e.editCssRule("h2.hello, h3.hello {margin: 0.3rem 0}");let o=e.virtual('<h3 class="hello">world</h3>'),t=e.virtual("<div></div>").append(o);e.virtual('<h2 class="hello">Hello</h2>',o,e.at.BeforeBegin),s.show({content:t,callback:()=>e.removeCssRule("h2.hello, h3.hello")})},staticDelegateEx:o=>{e.delegate("click","#static_delegate",t=>{if(!t.target.dataset.after)return t.target.setAttribute("data-after","1"),e.editCssRule(`#${t.target.id}::after {
                content: " HI! My name is U.S.E. Less. Click to add or remove me...";
                color: green;
              }`);e.removeCssRule(`#${t.target.id}::after`),t.target.removeAttribute("data-after")}),e("#static_delegate").trigger("click"),e(o.target).attr("disabled","disabled")},clearEx:o=>{e.editCssRule('[data-id="tmpEx"] { color: green; font-weight: bold; }'),e.editCssRule(".metoo {color: red;}"),e([`<p data-id="tmpEx">I hope they won't remove this!</p>`,"<div class='metoo'>Me too!</div>"],o.target.closest(".description")),setTimeout(()=>e('[data-id="tmpEx"]').clear(),1500),setTimeout(()=>e(".metoo").text("The did it didn't they?"),2500),setTimeout(()=>{e(".metoo").remove(),p(".metoo")},6e3)},showHideEx:o=>{if(!e(o.target.closest(".description")).find$(".divExClass").is.empty)return;let t=i=>{i[0].closest(".divExClass").remove(),e.removeCssRule(".showHide"),e.removeCssRule("button#hide, button#show, button#cleanup")};e.editCssRule(".showHide { display: block; color: red; font-weight: bold; }"),e.editCssRule("button#hide, button#show, button#cleanup { margin-right: 5px; }");let l=e(`<div class="divExClass">
          <span class="showHide">Hello World!</span></div>`,o.target.closest(".description"));l.append(e.virtual('<button id="hide">hide</button>').on("click",i=>e(i.target.closest(".divExClass").querySelector(".showHide")).hide())),l.append(e.virtual('<button id="show">show</button>').on("click",i=>e(i.target.closest(".divExClass").querySelector(".showHide")).show())),l.append(e.virtual('<button id="cleanup">remove</button>').on("click",(i,r)=>t(r)))},cssEx:o=>{let t=o.target.closest(".description");e('<p data-id="tmpEx">Hello #1</p>',t).css({paddingLeft:"4px",color:"white",backgroundColor:"#000"});let l=[...e.node('[data-id="tmpEx"]')?.classList].shift();e('<p data-id="tmpEx" class="leftRedBorder">Hello #2</p>',t).css({className:"leftRedBorder",paddingLeft:"4px",color:"green",borderLeft:"12px solid red"}),s.show({content:`generated class name (first element): ${l}`,callback:()=>setTimeout(()=>p(".leftRedBorder",`.${l}`),2500)})},styleRulingsEx:o=>{let t=e.virtual("<div>Hello <span>World</span></div>");t.Style.byRule({classes2Apply:["test1"],rules:[".test1 {backgroundColor: #EEE; color: green}",".test2 { color: red; }","#test3 { color: blue; }"]}),t.find$("span")?.addClass("test2"),s.show({content:e("<div>This resulted in:</div>").attr({id:"test3"}).append(t),callback:()=>e.removeCssRule(".test1",".test2","#test3")})},styleObjInStyleEx:o=>{let t=e.virtual('<p data-id="tmpEx"></p>').Style.inline({paddingLeft:"4px",color:"white",backgroundColor:"#000"}),l=`HTML of hello1: ${t.HTML.get(!0,!0)}`;t.append(`<div>${l}</div>`);let i=e.virtual('<p data-id="tmpEx" class="leftRedBorder"></p>').Style.inSheet({className:"leftRedBorder",paddingLeft:"4px",color:"green",borderLeft:"12px solid red"}),r=`HTML of hello2: ${i.HTML.get(!0,!0)}`;i.append(`<div>${r}</div>`);let m=e.virtual('<p data-id="tmpEx"></p>').Style.inSheet({paddingLeft:"4px",color:"green",borderLeft:"12px solid green"}),g=`HTML of hello3: ${m.HTML.get(!0,!0)}`;m.append(`<div>${g}</div>`);let h=[...m[0]?.classList].shift(),L=e("<div>").html(`<code>hello3.Style.valueOf("borderLeftColor")</code>: ${m.toDOM().Style.valueOf("borderLeftColor")}`),E=m.Style.computed,k=d(E.length,10)-10,j=e.virtual(`<div><br><code>hello3.Style.computed</code> 
        (random 10 of ${E.length} rules)<br>...<br>${[...E].slice(k,k+10).map(H=>`${H}: ${E[H]}`).join("<br>")}<br>...</div>`);s.show({content:e("<div>").append(t,i,m,L,j),callback:()=>e.removeCssRule(`.${h}`,".leftRedBorder")})},attrEx:o=>{let t=o.target.closest(".description"),l=e('<div data-id="tmpEx" class="initial">Hi, let me get some attributes</div>',t);l.attr({title:"Yes, I have a title now!",class:"volatile",data:{myTitle:"title as data"}});let[i,r,m,g,h]=[l.attr("data-id"),l.attr("title"),l.attr("class"),l.attr("data-my-title"),l.attr("onclick")];s.show({content:[`<code>someDiv.attr(\`data-id\`)</code>: ${i}`,`<code>someDiv.attr(\`data-my-title\`)</code>: ${g}`,`<code>someDiv.attr(\`title\`)</code>: ${r}`,`<code>someDiv.attr(\`class\`)</code>: ${m}`,`<code>someDiv.attr(\`onclick\`)</code>: ${h}`].join("<br>"),callback:p})},computedStyleEx:o=>{e.setStyle(".redEx {color: red; font-weight: bold}"),e('<p class="redEx">Hello!</p>',o.target.closest(".description")),s.show({content:`<code>$(".redEx").computedStyle("color")</code>: ${e(".redEx").computedStyle("color")}
        <br><code>$(".redEx").computedStyle("font-weight")</code>: ${e(".redEx").computedStyle("font-weight")}`,callback:()=>{e.removeCssRule(".redEx"),e(".redEx").remove()}})},dimEx:o=>{let t=e('<p data-id="tmpEx">Hello, where am I at the moment?</p>',o.target.closest(".description")).style({color:"red",fontWeight:"bold"}),l=JSON.stringify(t.dimensions,null,2).replace(/[}{"]/g,"").trim().replace(/\n/g,"<br>");s.show({content:l,callback:()=>t.remove()})},findEx:()=>s.show({content:e(".docs").find("#instance_find")[0]?.outerHTML.replace(/</g,"&lt;")}),find_D_Ex:()=>s.show({content:e(".docs").find$("#instance_find_D").HTML.get(1,1)}),firstEx:o=>{let t=e("#navigation li[data-key]");s.show({content:e(`<div>
         <code>jqlElems.collection.length</code>: ${t.collection.length},<br>
         outerHTML <code>jqlElems.first()</code>: ${t.first()?.outerHTML.replace(/</g,"&lt;")}</div>`)})},first$Ex:o=>{let t=e(".docs").first$("#instance_first_D"),l=()=>{s.show({content:`<code>$(\`.docs h3\`).first$(17)</code> =&gt;<br>${e(".docs h3").first$(17).HTML.get(1,1)}`})};s.show({content:`<div><code>$(\`.docs\`).first$(\`#instance_first_D\`)</code> =&gt;<br>${t.HTML.get(1,1)}</div>`,callback:l})},first$Ex2:o=>{let t=e(".docs").first$(30001);s.show({content:`<div>non existing (should be <code>undefined</code>): ${t.outerHtml}</div>`})},dataEx:o=>{let t=e("<div>Hello World again</div>",o.target.closest(".description"));e.editCssRule("[data-is-universe]:after {content: ' ... and the universe!'; color: red;}"),t.data.add({isUniverse:!0,something:"else","dashed-prop-given":1}),s.show({content:`<code>helloWrld.data.all</code> =&gt; ${JSON.stringify(t.data.all)}
          <br><code>helloWrld.data.get("something")</code> =&gt; ${t.data.get("something")}
          <br><code>helloWrld.data.all.isUniverse</code> =&gt; ${t.data.all.isUniverse}
          <br><code>helloWrld.data.all["is-universe]</code> =&gt; ${t.data.all["is-universe"]}
          <br><code>helloWrld.data.get("is-universe")</code> =&gt; ${t.data.get("is-universe")}
          <br><code>helloWrld.data.get("isUniverse")</code> =&gt; ${t.data.get("isUniverse")}
          <br><code>helloWrld.data.get("dashed-prop-given")</code> =&gt; ${t.data.get("dashed-prop-given")}
          <br><code>helloWrld.data.all.nonexisting</code> =&gt; ${t.data.all.nonexisting}
          <br><code>helloWrld.data.get("nonexisting", "no sir, I'm not here")</code> =&gt; ${t.data.get("nonexisting","no sir, I'm not here")}`,callback:()=>{t.data.remove("isUniverse"),setTimeout(()=>{e.removeCssRule("[data-is-universe]:after"),t.remove()},3500)}})},eachEx:()=>{let o=e(".methodName"),t="rgb(165, 42, 42)",l=o.computedStyle("color");o.each(i=>e(i).style({color:l===t?"":t}))},clickNavGroup:(o,t)=>{let l=!e(t).hasClass("closed");e(".navGroup").each(i=>e(i).addClass("closed")),e.node(`#${t.dataset.group}_About`).scrollIntoView(),e(".selected").removeClass("selected"),e("ul.navGroupItems li:first-child div[data-navitem]",t).addClass("selected"),u(),!l&&t.classList.remove("closed")},clickNavItem:o=>(e(".navGroup").each(t=>e(t).addClass("closed")),e(o.target.closest(".navGroup")).removeClass("closed"),e.node(o.target.dataset.navitem).scrollIntoView(),e(".selected").removeClass("selected"),e(o.target).addClass("selected"),u()),jumpTo:o=>{let t=e(`[data-navitem='#${o}']`);t.trigger("click"),t[0].offsetTop>e.node("#navigation").offsetHeight&&t[0].scrollIntoView()},jump2Nav:o=>{let t=o.target.dataset.jumpgroup,l=o.target.dataset.jumpkey;e(t?`[data-group='${t}']`:`[data-navitem='#${l}']`).trigger("click")}}}var C=location.host.startsWith("dev"),I=C?"../index.js":"../../Bundle/jql.min.js",n=(await import(I)).default;document.title=C?`##DEV## ${document.title}`:document.title;window.jql=C?n:"nothing";var W=(e,d=0)=>([e,d]=[Math.floor(e),Math.ceil(d)],Math.floor(crypto.getRandomValues(new Uint32Array(1))[0]/2**32*(e-d+1)+d)),f=await fetch(`./documentation.json?v=${W(1e4,1e3)}`).then(e=>e.json());w(n);var A=Object.keys(f).filter(e=>e.endsWith("About")).map(e=>({name:e,displayName:e.slice(0,e.indexOf("About")).toUpperCase()})),R=e=>e.slice(e.indexOf("_")+1),N=({group:e,displayName:d})=>{let a=n(`<ul class="navGroup closed" data-group="${d.toLowerCase()}"/>`,n.node("#navigation"));return a.append(n(`<li class="grouped">${d}<ul class="navGroupItems"></ul></li>`)),Object.keys(f).filter(s=>s.startsWith(e.displayName.toLowerCase())).sort((s,c)=>s.localeCompare(c)).forEach(s=>{let c=s.replace(/([a-z])\$/gi,"$1_D");n(".navGroupItems",a[0]).append(n(`<li data-key="${c}"><div data-navitem="#${c}">${R(s)}</div></li>`))}),d},y=n.node(".docs");n.delegate("click",T(n));var O=(e,d)=>`<div class="exContainer"><h3 class="example">Example${d>0?` ${d+1}`:""}</h3><pre class="language-javascript"><code class="js language-javascript line-numbers">${e.trim().replace(/</g,"&lt;").replace(/>/g,"&gt;")}</code></pre></div>`,_=e=>{let d=/(?<=<example>)(.|\n)*?(?=<\/example>)/gm,a=(e.match(d)||[]).map((s,c)=>O(s,c));return e.replace(/<example>(.|\n)*?<\/example>/g,()=>a.shift())};var D=e=>e.replace(/</g,"&lt;").replace(/&lt;code/g,"<code").replace(/&lt;\/code/g,"</code"),G=e=>{let d=e.displayName.slice(0,-1);return n(`<h3 class="groupHeader" id="${e.name}">${d}</h3>`,y),d},B=e=>Object.entries(e).map(([d,a])=>{let s=/_isobject/i.test(d)?"[Object&lt;string, any>]":d;return`<div class="param"><code>${D(s)}</code>: ${D(a)}</div>`});A.forEach(e=>{let d=N({group:e,displayName:G(e)});Object.entries(f).filter(([a,s])=>a.startsWith(`${e.displayName.toLowerCase()}`)).sort(([a],[s])=>a.localeCompare(s)).forEach(([a,s])=>{s.description=s.description.trim();let c=R(a),u="<span/>",v=[];if(s.params?.length&&(u=`<div><b>Parameters</b>${s.params.reduce((p,b)=>[...p,B(b)],[]).join("")}</div>`),/<example>/.test(s.description)&&(s.description=_(s.description)),c==="About")return n(`<div data-groupContainer="${d}" class="description">${s.description.replace(/\n{3,}/g,`
`)}</div>`,y);n([`<h3 class="methodName" id="${a.replace(/([a-z])\$/gi,"$1_D")}">${c}</h3>`,u,`<div class="returnValue"><b>Returns</b>: ${s.returnValue}</div>`,`<div class="description">${s.description.replace(/\n{3,}/g,`
`)}</div>`],y)})});f=null;n(".docs").removeClass("loading");n("code.js").each(e=>Prism.highlightElement(e));n("#jql_About").html(' (<span class="jqlTitle"><b>JQ</b>uery<b>L</b>ike</span>)',!0);n('[data-group="jql"]').trigger("click");
