var S=L;function L(e){let n=j(e);return document[Symbol.actionFns]=n,e.editCssRules('[data-id="tmpEx"], #tmpEx { white-space: normal; padding-top: 5px;}',".test, .warn { color: red; }"),{clientHandling:function(c){if(c.type==="scroll")return r(c);let u=!c.target?.closest?.("[data-key]")&&c.target.closest(".navGroup"),g=c.target?.closest?.(".methodName"),i=c.target.closest("[data-action]")?.dataset?.action,x=c.target?.dataset?.navitem;if(u)return n.clickNavGroup(c,u);if(x)return n.clickNavItem(c);if(g)return n.jumpTo(g.id);if(i&&n[i])return n[i](c)},allExampleActions:Object.entries(n).reduce(m,{})};function m(c,[u,g]){return g=String(g),{...c,[u]:g.slice(g.indexOf("{")+1,-1).replace(/\n {6}/g,`
`).replace(/</g,"&lt;").replace(/\$/g,"&dollar;").trim()}}function r(c){let u=c.target.scrollTop,g=e.nodes(".paragraph, [data-groupcontainer]").find(i=>u-i.nextElementSibling.offsetTop<=-40);if(g){let i=e(`[data-navitem="#${g.querySelector("h3").id}"]`);i.hasClass("selected")||(e(".navGroup:not(.closed)").addClass("closed"),i.closest(".navGroup").removeClass("closed"),e(".selected").removeClass("selected"),i.addClass("selected"))}}}function j(e){let n=Symbol.jqlvirtual,m=Symbol.jql,r=Symbol.jql2Root,c=o=>`<code class="inline">${o}</code>`,u=o=>o===void 0?"Yep \u{1F60E}":"Nope \u{1F621}",g=(o,t=0)=>([o,t]=[Math.floor(o),Math.ceil(t)],Math.floor([...crypto.getRandomValues(new Uint32Array(1))].shift()/2**32*(o-t+1)+t)),i=e.Popup,x=e.node(".docs"),w=()=>x.scrollBy(0,-15),H=()=>{let o=e.button({id:"modalCloseDemo"},"Close me")[n].on("click",()=>i.removeModal()),t=()=>i.show({content:"Modal closed, you're ok, bye.",closeAfter:2}),s=e.virtual(e("[data-popup2]").HTML.get()).append(e.virtual("<p/>").append(o));i.show({content:s,modal:!0,callback:t,warnMessage:'"In other words: <i>you can only close this using the <b>button</b> ...</i>"'})},E=(...o)=>setTimeout(()=>{e('#tmpEx, [data-id="tmpEx"]').remove(),o.length>0&&e.removeCssRule(...o)},1500),C=(o=!1)=>o?e.removeCssRule("#tmpEx"):e.editCssRule("#tmpEx {color: green; font-weight: bold;}");e.log("Documenter handling done.");let p=o=>o.target.closest(".description");return{popupTimedEx:()=>{i.createTimed("Hi, this is a popup! I'll be active for 5 seconds (as long as you don't close me first).",5,()=>i.createTimed("I am closing",2))},popupCreateModalEx:()=>{let o="        Hi. This box is <i>really</i> modal.        <br>There is no close icon and clicking outside this box does nothing.        <br>In other words: you can only close this using the button below.        <br>Try clicking anywhere outside the box ...",t=e.button({id:"modalCloseTest"},"Close me");e.delegate("click","#modalCloseTest",i.removeModal);let s=()=>i.show({content:"Modal closed, you're ok, bye.",closeAfter:2}),l=e.div(o,e.div({style:"margin-top: 0.6rem;"},t)).outerHTML;e.Popup.create(l,!0,s,"There's only one escape here!")},popupShowModalEx:()=>{let o="        Hi. This box is <i>really</i> modal.        <br>There is no close icon and clicking outside this box does nothing.        <br>In other words: you can only close this using the button below.        <br>Try clicking anywhere outside the box ...",t=e.button({id:"modalCloseTest"},"Close me");e.delegate("click","#modalCloseTest",i.removeModal);let s=()=>i.show({content:"Modal closed, you're ok, bye.",closeAfter:2}),l=e.div(o,e.div({style:"margin-top: 0.6rem;"},t)).outerHTML;e.Popup.show({content:l,modal:!0,callback:s,warnMessage:"You <i>can</i> read, can't you?"})},popupCreateEx:()=>{i.create(e.div("Here's a popup message for you.",e.div("Close it by clicking the checkmark icon or anywhere outside the box")))},popupShowEx:()=>{i.show({content:e.div("Here's a popup message for you.",e.div("Close it by clicking the checkmark icon or anywhere outside the box"))})},popupShowTimedEx:()=>{i.show({content:e.div("Here's a popup message for you.",e.div("Close it by clicking the checkmark icon or anywhere outside the box"),e.div("If you don't, I will close all by myself after 5 seconds ;)")),closeAfter:5})},addClassEx:o=>{e.editCssRule("#tmpEx.warnUser {color: red; font-weight: bold;}"),e.editCssRule(".user:before {content: 'Hi user! ';}"),e('<div id="tmpEx">This is not very useful</div>',p(o)).addClass("warnUser","user"),setTimeout(e("#tmpEx").remove,2e3)},appendEx:o=>{C(),e.editCssRule(".appended { color: red; cursor: pointer; }");let t=e.virtual('<div class="appended">I am an appended JQL instance ...</div>').on("click",()=>alert("HELLO!")),s=e('<div id="tmpEx">Hi there! Wait a sec ... </div>',p(o)).append(t,"Appended text","<div>Appended HTML string</div>",Object.assign(document.createElement("div"),{textContent:"Appended element"}));setTimeout(()=>i.show({content:t.html("Now I am appended to the popup element, you can still click me"),callback:()=>e("#tmpEx").remove()}),1500)},prependEx:o=>{e("#tmpEx").remove(),C(),e.editCssRule(".appended { color: red; }"),e('<div id="tmpEx">... hi there!</div>',p(o)).prepend('<div class="appended">Hello and also ...</div>'),setTimeout(e("#tmpEx").remove,2e3)},afterMeEx:o=>{e.Popup.show({content:e.div("I am div 1")[n].afterMe(e("<div>And I am div 2</div>"))})},beforeMeEx:o=>{e.Popup.show({content:e("<div>...and I am div 2</div>").andThen(e.div("...and finally I am div 4")[n].beforeMe(e.div("...hithere, I am div 3")[n])).beforeMe(e(e.div("I am div 1")))})},andThenEx:o=>{let t=e.p("I am the first"),s=e.p("I am the second"),l='<code class="inline">ele1[create].andThen(ele2)</code>',d='<code class="inline">ele2[create].andThen(ele1)</code>',v='<code class="inline">ele2[create].andThen(ele1, true)</code>';e.Popup.show({content:e(l).andThen(t).andThen(s[n]),closeAfter:3.5,callback:()=>e.Popup.show({closeAfter:3.5,content:e(d).andThen(s).andThen(t),callback:()=>e.Popup.show({content:s[n].andThen(t,!0).andThen(v),closeAfter:3.5})})})},isEx:o=>{let t=b=>`<code class="inline">${b}</code>`,s=e.input({id:"disabledInput",disabled:!0,type:"text",placeholder:"I am not enabled"})[n],{is:l}=s,d=()=>`<ul>${[...Object.keys(l)].reduce((b,f)=>b.concat(`<li>${t(f)}? ${l[f]}</li>`),"")}
         </ul>`,v=()=>e.virtual(e.div({class:"description"},`<h3><code class="inline">inpDisabled</code> ${l.inDOM?"in":"<i>NOT</i> in"} the DOM</h3>
           <div>${d()}</div>`)),h=()=>{s.toDOM(),e.Popup.show({content:e.div()[n].append(s,v())})};i.show({content:e(v()),callback:h})},closestEx:o=>{let t=e('<div><b style="color:red">Hello world again</b></div>',p(o));i.show({content:`
          <code class="inline">someDiv.closest(".description").HTML.get(1, 1)</code><br>${t.closest(".description").HTML.get(1,1).slice(0,100)}&hellip;`,callback:t.remove})},chainEx:o=>{e.editCssRules("#tmpEx {color: green;}",".helloworld {font-weight: bold;}"),C(),e('<div id="tmpEx">Hello world.</div>',p(o)).addClass("helloworld").append("<span> And the rest of the universe ... </span>").text(" (will disappear in a few seconds ...)",!0),setTimeout(()=>e("#tmpEx").remove(),3e3)},fnEx:()=>{e.fn("addTitle",(t,s)=>s?t.prop("title",s):t);let o=e.virtual('<div data-id="tmpEx">Hello world</div>');i.show({content:o.addTitle("hi there!").append(`<div>My title is now "${o.prop("title")}". Hover me!</div>`)})},staticCreateStyleEx:()=>{let o=e.editStylesheet("exampleStyleSheet");((...h)=>h.forEach(b=>o(b)))(".exampleContainer { margin: 2rem; font: normal 12px/15px verdana, arial; }","#example { color: green; }");let s=e.node("#exampleStyleSheet"),l=`Is <code class="inline">myBrandNewCssSheet</code>
          really a stylesheet? ${e.IS(s,HTMLStyleElement)?"YEP":"NOPE"}`,d=[...s.sheet.rules].reduce((h,b)=>h.concat(b.cssText),[]);e.Popup.show({content:e.div(e.div("While this popup is open, open the developer console (tab 'Elements')        and check if &lt;head> contains <code class='inline'>style#exampleStyleSheet</code>"),e.p(l),e.p("What rules are in it?"),e.pre({style:"color:green;margin:-8px 0 0 1em;"},"- "+d.join("<br>- ")))[n],callback(){e("#exampleStyleSheet").remove()}})},staticElemEx:()=>{e.editCssRules(".exRed {color: red;}");let o=e.p("Hello world ...")[n].append(e.i({class:"exRed"},e.B(" here we are!")));e.Popup.show({content:o,callback:()=>e.removeCssRule(".exRed"),closeAfter:3})},staticElemEx2:o=>{e.editCssRules(".exRed { color: red; }",".exFont {            font-family: fantasy;            font-size: 1.2rem;        }");let t=e.p({text:"Hello world ... ",id:"Hithere"})[m];t.append(e.i({class:"exRed exFont"},e.SPAN(" here we are!"))).appendTo(p(o)),e.Popup.show({content:t,callback:()=>e.removeCssRules(".exRed",".exFont"),closeAfter:3})},staticElemEx3:()=>{e.editCssRules(".exRed {color: red;}",".exFont {          font-family: fantasy;          font-size: 1.2rem;          margin-right: 0.4rem;        }");let{P:o,I:t,SPAN:s}=e,l=t({class:"exRed exFont"},s("Here we are! ")),d=o({text:"Hello world ... ",id:"Hithere"});l[r](d,e.at.start),e.Popup.show({content:d,callback:()=>e.removeCssRules(".exRed",".exFont"),closeAfter:3})},staticElemEx4:()=>{e.editCssRules(".exRed {color: red;}",".exFont {          font-family: fantasy;          font-size: 1.2rem;          margin-right: 0.4rem;        }");let{p_jql:o,I:t,SPAN:s}=e,l=t({class:"exRed exFont"},s("Here we are! ")),d=o("Hello world ... ");d.data.set({id:"staticElemEx"}).prepend(l),e.Popup.show({content:d,callback:()=>e.removeCssRules(".exRed",".exFont"),closeAfter:3})},fnEx2:o=>{e.fn("colorRed",s=>(s[0].style.color="red",s));let t=e.virtual('<div data-id="tmpEx">Hello world</div>');i.show({content:t.append(e("<div>There we have it</div>").colorRed())})},valEx:o=>{let t=e('<input data-id="tmpEx" type="text" value="hello world">',p(o)),s=`Initial value <code class="inline">input.val()</code> => ${t.val()}
          <br>Empty it: <code class="inline">input.val("")</code> => ${t.val("").val()}
          <br>New value: <code class="inline">input.val("hi there")</code> => ${t.val("hi there").val()}`;i.show({content:s,callback:E})},htmlEx:o=>{let t=p(o),s=e("        <div data-id='tmpEx'>          Hello <span>world</span>        </div>",t);setTimeout(()=>{e('[data-id="tmpEx"] span',t).html("universe!"),setTimeout(()=>e('[data-id="tmpEx"] span',t).html(" And bye again",!0),1e3)},1e3),setTimeout(()=>e('[data-id="tmpEx]',t).remove(),5500)},outerHTMLEx:o=>{let t=l=>l.replace(/</g,"&lt;"),s=e.virtual('<div data-id="tmpEx"><b>Hello</b> <span>World</span>!</div>',p(o));i.show({content:`
          <code class="inline">printHtml(exElem.outerHtml)</code> =&gt; ${t(s.outerHtml)}<br>
          // one can also use [jql instance].HTML:
          <code class="inline">exElem.HTML.get(true, true)</code> =&gt; ${s.HTML.get(!0,!0)}`,callback:()=>s.remove()})},propEx:o=>{let t=e('<div data-id="tmpEx"><b>Hello</b> <span>World</span>!</div>',p(o));t.prop({title:"now I have a title",onclick:'javascript:alert("hello!")'}),i.show({content:`<code class="inline">exElem.prop("title")</code> =&gt; ${t.prop("title")}
        <br><code class="inline">exElem.prop("onclick")</code> =&gt; ${t.prop("onclick")}`,closeAfter:4}),setTimeout(()=>t.remove(),1e4)},removeClassEx:o=>{e.editCssRule(".exTest { color: red; font-weight: bold; }");let t=e('<div data-id="tmpEx"><b>Hello</b> <span class="exTest">World</span>!</div>',p(o));setTimeout(()=>{t.find$("span").removeClass("exTest"),setTimeout(()=>t.remove(),2500)},1500)},getDataEx:o=>{let t=e(o.target),s=t.getData("action"),l=t.getData("nonexistent"),d=t.getData("nothing","NOCANDO");i.show({content:[`<code class="inline">action</code>: "${s}"`,`<code class="inline">undef</code>: ${l}`,`<code class="inline">undefWithDefaultValue</code>: "${d}"`].join("<br>")})},editCssRuleEx:o=>{e.editCssRule("#div1 {margin: 0.3rem; color: green; background-color: #EEE; }"),e.editCssRule("#div2",{margin:"0.3rem",color:"red",backgroundColor:"#EEE"});let t=e.virtual('<div id="div1">I am div#div1</div>'),s=e.virtual('<div id="div2">I am div#div2</div>');i.show({content:e(e.div()).append(t,s),callback:()=>e.removeCssRules("#div1","#div2")})},editCssRulesEx:()=>{let o=e.virtual("<div id='div1'>I am div#div1</div>"),t=e.virtual("<div id='div2'>I am div#div2</div>");e.editCssRules("#div1 { margin: 0.3rem; color: green; background-color: #EEE; }","#div2 { margin: 0.3rem; color: red; background-color: #EEE; }"),i.show({content:e("<div>").append(o,t),callback:()=>e.removeCssRules("#div1","#div2")})},removeCssRulesEx:()=>{let o=e.virtual("<div id='div1'>I am div#div1</div>"),t=e.virtual("<div id='div2'>I am div#div2</div>");e.editCssRules("#div1 { margin: 0.3rem; color: green; background-color: #EEE; }","#div2 { margin: 0.3rem; color: red; background-color: #EEE; }"),i.show({content:e.virtual("<div>").append(o,t),callback:()=>{e.removeCssRules("#div1","#div2");let s=[...e.node("#JQLStylesheet",document.documentElement).sheet.cssRules].filter(l=>l.cssText.startsWith("#div1")||l.cssText.startsWith("#div2"));i.show({content:`Rules removed, so we expect <code class="inline">rulesExist?.cssText</code>
                      to be undefined. Is that so? ${u(s?.cssText)}`,closeAfter:5})}})},removeCssRuleEx:()=>{let o=e.virtual('<div id="div1">I am div#div1</div>'),t=e.virtual('<div id="div2">I am div#div2</div>');e.editCssRule("#div1 {margin: 0.3rem; color: green; background-color: #EEE; }"),i.show({content:e.virtual("<div>").append(o,t),callback:()=>{e.removeCssRule("#div1");let s=[...e.node("#JQLStylesheet",document.documentElement).sheet.cssRules].filter(l=>l.cssText.startsWith("#div1"));i.show({content:`Rule removed, so we expect <code class="inline">rulesExist?.cssText</code> to be undefined.
                 Is that so? ${u(s?.cssText)}`,closeAfter:5})}})},virtualEx:o=>{let t=e.node(".virtual");t&&t.remove();let s=d=>d.isVirtual?"Nope":"Yep",l=e.virtual('<div class="virtual" data-id="tmpEx">Hello</div>').append(e.virtual("<span> world!</span>").style({color:"red",fontWeight:"bold"}));i.show({content:e("<div>virtual element created. In DOM tree? </div>").append(` <b>${s(l)}.</b>`).append(" We'll add it to this chapter soon."),closeAfter:2.5,callback:()=>{l.toDOM(p(o)).append(`<b> In DOM tree? ${s(l)}</b>`)}}),setTimeout(()=>l.remove(),5e3)},toggleClassEx:o=>{if(!e(p(o)).find$(".divExClass").is.empty)return;let t=()=>{e.removeCssRule(".redEx"),e.removeCssRule("button#toggleColor, button#cleanup")};e.editCssRule(".redEx { color: red; }"),e.editCssRule("button#toggleColor, button#cleanup { margin: 0 5px; }");let s=e('<div class="divExClass redEx">Hello World!</div>',p(o));s.append(e.virtual('<button id="toggleColor">toggle</button>').on("click",(l,d)=>e(d[0].closest(".divExClass")).toggleClass("redEx"))),s.append(e.virtual('<button id="cleanup">remove</button>').on("click",(l,d)=>{d[0].closest(".divExClass").remove(),t()}))},replaceClassEx:o=>{let t=e('<div class="divExClass">Hello World!</div>',p(o)),s=()=>{t.remove(),e.removeCssRule(".redEx"),e.removeCssRule(".redExUl")};e.editCssRule(".redEx { color: red; }"),e.editCssRule(".redExUl { text-decoration: underline; }"),setTimeout(()=>{t.replaceClass("divExClass","redEx","redExUl"),setTimeout(s,2e3)},1500)},ISEx:o=>{let t={Object:{say:"hello"},Array:[1,2,3],RegExp:/[a-z]/gi,Null:null,Undefined:void 0,Zero:0,Symbol:Symbol("symbol1")},s=v=>e.IS(v,void 0,NaN,null),l=v=>e.IS(v),d=Object.keys(t).reduce((v,h)=>[...v,`<code class="inline">whatIs(someVars.${h})</code>: ${l(t[h])}`],[]);i.show({content:d.concat([`<code class="inline">$.IS(someVars.Object, Object)</code>: ${e.IS(t.Object,Object)}`,`<code class="inline">$.IS(someVars.Object, Array)</code>: ${e.IS(t.Object,Array)}`,`<code class="inline">$.IS(someVars.Object, String, Object, Array)</code>: ${e.IS(t.Object,String,Object,Array)}`,`<code class="inline">$.IS(someVars.Array, Array)</code>: ${e.IS(t.Array,Array)}`,`<code class="inline">$.IS(someVars.Array, Object)</code>: ${e.IS(t.Array,Object)}`,`<code class="inline">$.IS(someVars.RegExp, RegExp)</code>: ${e.IS(t.RegExp,RegExp)}`,`<code class="inline">$.IS(someVars.Null, undefined)</code>: ${e.IS(t.Null,void 0)}`,`<code class="inline">$.IS(someVars.Null, null)</code>: ${e.IS(t.Null,null)}`,`<code class="inline">$.IS(someVars.Zero, Boolean)</code>: ${e.IS(t.Zero,Boolean)}`,`<code class="inline">$.IS(someVars.Symbol, Symbol)</code>: ${e.IS(t.Symbol,Symbol)}`,`<code class="inline">isNothing(someVars.Undefined)</code>: ${s(t.Undefined)}`,`<code class="inline">isNothing(someVars.RegExp)</code>: ${s(t.RegExp)}`]).join("<br>")})},singleEx:o=>{e("<div data-id='tmpEx'>           <div class='test'>Hello world (1)</div>           <div class='test'>Hello world (2)</div>        </div>",o.target,e.insertPositions.AfterEnd),i.show({content:`<code class="inline">$("[data-id='tmpEx']").<b>single(".test")</b>.HTML.get(1,1)</code>
          <p>${e("[data-id='tmpEx']").single(".test").HTML.get(1,1)}</p>`,callback:E})},singleEx2:o=>{e("<div data-id='tmpEx'>           <div class='test'>Hello world (1)</div>           <div class='test'>Hello world (2)</div>        </div>",o.target,e.insertPositions.AfterEnd),i.show({content:`<code class="inline">$("[data-id='tmpEx']").<b>single()</b>.HTML.get(true, true)</code>
         <p>${e("[data-id='tmpEx']").single().HTML.get(!0,!0)}</p>`,callback:E})},singleEx3:o=>{e('<div data-id="tmpEx">           <div class="test">Hello world (1)</div>           <div class="test">Hello world (2)</div>           <div class="test">Hello world (3)</div>         </div>',o.target,e.insertPositions.AfterEnd),i.show({content:`<code class="inline">$(".test").<b>single(1)</b>.HTML.get(1, 1)</code>
         <p>${e(".test").single(1).HTML.get(1,1)}</p>`,callback:E})},htmlObjEx:o=>{let t=e.DIV({id:"initial"})[n],{HTML:s}=t;s.set("'nough said").data.set({iteration:"set"});let l=`<code class="inline">set</code>: ${s.get(!0,!0)}`;s.replace("HELLO").data.set({iteration:"replace"});let d=`<code class="inline">replace</code>: ${s.get(!0,!0)}`;s.append(e.span(" WORLD")[n]).data.set({iteration:"append"});let v=`<code class="inline">append</code>: ${s.get(!0,!0)}`;s.insert(e.B("The obligatory ... ")).data.set({iteration:"insert"});let h=`<code class="inline">insert</code>: ${s.get(!0,!0)}`,b=e.virtual(`<div class="description">
        <h3>Created <code class="inline">div#initial</code></h3>
        <ul>
          <li>${l}</li>
          <li>${d}</li>
          <li>${v}</li>
          <li>${h}</li>
        </ul>
        <h3>So, there we have it \u{1F60F}</h3></div>`).append(t.Style.byRule({rules:".tmp1234 { color: green; font-weight: bold; }"}));i.show({content:b})},toNodeListEx:o=>{let t=p(o);e('<div class="ex">**Initial</div>',t);let s=e(['<div id="some" class="ex">Hello</div>','<div id="thing" class="ex">World</div>']).appendTo(t).toNodeList();for(let l of s)l.textContent+="!",l.style.color="red";e(`<div class="ex">**Created and modified using ${c("nodes")}</div>`,t).append(...s),setTimeout(e(".ex").remove,5e3)},htmlForEx:o=>{let t=e.div({data:{id:"htmlExample"}})[n];i.show({content:t.html("(<code class='inline'>html</code>) =>          Hello <span class='wrld'><b>world</b></span> <span>... wait 3 secs ...</span>"),closeAfter:3,callback:()=>{i.show({content:t.htmlFor("code","htmlFor").htmlFor(".wrld","<i><b>UNIVERSE</b></i>").htmlFor("span:last-child","<i>... wait 3 secs ...</i>"),closeAfter:3,callback:()=>i.show({content:t.htmlFor(".wrld","injecting a &lt;script> tag will not work").htmlFor("span:last-child","<script>alert('no!')<\/script>"),closeAfter:5})})}})},isEmptyEx:o=>{let t=p(o)[n],s=e.div({data:{id:"tmpEx"}},e.b({class:"red"},"Hello!"))[n].appendTo(t);e.Popup.show({content:`
          <code class="inline">someDiv.isEmpty()</code> =&gt; ${s.isEmpty()}<br>
          <code class="inline">someDiv.find$("b:first-child").isEmpty()</code> =&gt; ${s.find$("b:first-child").isEmpty()}`,closeAfter:2.5,callback:()=>{s.remove(),s=e(".IDoNotExist"),i.show({content:`
              <code class="inline">someDiv.isEmpty()</code> =&gt; ${s.isEmpty()}<br>
              <code class="inline">someDiv.find$("b:first-child").isEmpty()</code> =&gt; ${s.find$("b:first-child").isEmpty()}`,callback:s.remove})}})},replaceWithEx:()=>{let o=e.virtual('<div id="oldD">I shall be replaced...<div>'),t=e.virtual('<div id="newD">I have replaced div#oldD!<div>');i.show({content:o,closeAfter:3,callback:()=>i.show({content:o.replaceWith(t).style({color:"red"}),closeAfter:3})})},textOrCommentEx:o=>{let t=p(o);e([e.text("Some text added here"),e.text("Some comment added here",!0)],t);let s=[...t.childNodes].filter(l=>l.nodeValue?.trim().length&&[3,8].find(d=>l.nodeType===d));i.show({content:`<div><b>The created text nodes</b></div><div>${s.map(l=>l.nodeType===8?`&lt;!--${l.data}-->`:l.data).join("<br>")}</div>`,callback:()=>s.forEach(l=>l.remove())})},replaceEx:()=>{let o=e.virtual('        <div>Hi there!<div class="oldD">I shall be replaced...</div>        <div class="oldD">Me Too!</div></div>'),t=e.virtual('<div>Formerly known as "div.oldD"<div>').style({color:"red"});i.show({content:o,closeAfter:3,callback:()=>i.show({content:o.replace(".oldD",t),closeAfter:3})})},lenEx:o=>{let t=e(`<p>There are <b>${e("h3").length}</b> &lt;h3>-elements within this document</p>`,p(o));setTimeout(t.remove,4e3)},setDataEx:o=>{let t=e("<span>Hello world</span>",p(o));e.editCssRule("[data-goodbye]::after { content: '...'attr(data-goodbye); }"),setTimeout(()=>{t.setData({id:"temporary",goodbye:"and bye again"}),setTimeout(()=>e("[data-id='temporary']").remove(),2500)},1500)},appendToEx:o=>{e.editCssRule("#tmpEx { color: blue; font-weight: normal; }"),e.editCssRule("#tmpEx div {color: red; font-weight: bold}");let t=e('<p id="tmpEx">Hello World</p>',p(o)),s=e.div("And bye again")[n];console.log(s),setTimeout(()=>{s.appendTo(t),setTimeout(()=>e("#tmpEx").remove(),1500)},1500)},duplicateEx:o=>{let t=p(o);e.editCssRule(".someClass",{color:"brown"});let s=e('<div class="someClass">[hello]</div>',t).duplicate(!0,t);e(".someClass",t).append(" world!").prepend("We say: ").each(d=>d.setAttribute("id",`_${Math.floor(1e4+Math.random()*1e4).toString(16)}`)).duplicate(!0,t).replaceClass("someClass","tmp").text(" That's right folks. Bye!",!0);let l=e(".someClass, .tmp").collection.map(d=>e(d).HTML.get(1,1)).join("<br>");i.show({content:l,callback:e(".someClass, .tmp").remove})},hasClassEx:o=>{let t=e('<div class="one two tree">Hello world</div>',p(o));i.show({content:`<code class="inline">tmpDiv.hasClass("one", "tree")</code> =&gt; ${t.hasClass("one","tree")}<br>
         <code class="inline">tmpDiv.hasClass("one", "four")</code> =&gt; ${t.hasClass("one","four")}<br>
         <code class="inline">tmpDiv.hasClass("five")</code> =&gt; ${t.hasClass("five")}`,callback:e(".one.two").remove})},staticAtEx:()=>{e.editCssRules(".hello { margin: 0.3rem 0; display: inline-block; }","h2.hello {margin-right: 0.2rem;");let o=e.h3({class:"hello"},"world"),t=e("<div>").append(o[n]);e.virtual('<h2 class="hello">Hello</h2>',o,e.at.BEFORE),e.Popup.show({content:t,callback:()=>e.removeCssRules(".hello","h2.hello"),closeAfter:3})},staticDelegateEx:o=>{e.delegate("click","#static_delegate",function(t){let s=e(t.target);return s.prop("title")||s.prop({title:"click to toggle the color of all headers"}),s.Style.computed.color==="rgb(0, 0, 255)"?e.editCssRule(":root { --method-head-color: rgb(224, 59, 59); }"):e.editCssRule(":root { --method-head-color: blue; }")}),e("#static_delegate").trigger("click"),e(o.target).attr("disabled","disabled")},clearEx:o=>{e.editCssRule('[data-id="tmpEx"] { color: green; font-weight: bold; }'),e.editCssRule(".metoo {color: red;}"),e([`<p data-id="tmpEx">I hope they won't remove this!</p>`,'<div class="metoo">Me too!</div>'],p(o)),setTimeout(()=>e('[data-id="tmpEx"]').clear(),1500),setTimeout(()=>e(".metoo").text("They did it didn't they?"),2500),setTimeout(()=>{e(".metoo").remove(),e.removeCssRule(".metoo")},4e3)},showHideEx:o=>{if(!e(p(o)).find$(".divExClass").is.empty)return;let t=l=>{l[0].closest(".divExClass").remove(),e.removeCssRule(".showHide"),e.removeCssRule("button#hide, button#show, button#cleanup")};e.editCssRule(".showHide { display: block; color: red; font-weight: bold; }"),e.editCssRule("button#hide, button#show, button#cleanup { margin-right: 5px; }");let s=e('        <div class="divExClass">          <span class="showHide">Hello World!</span>        </div>',p(o));s.append(e.virtual('<button id="hide">hide</button>').on("click",l=>e(l.target.closest(".divExClass").querySelector(".showHide")).hide())),s.append(e.virtual('<button id="show">show</button>').on("click",l=>e(l.target.closest(".divExClass").querySelector(".showHide")).show())),s.append(e.virtual('<button id="cleanup">remove</button>').on("click",(l,d)=>t(d)))},cssEx:o=>{let t=p(o);e('<p data-id="tmpEx">Hello #1</p>',t).css({paddingLeft:"4px",color:"white",backgroundColor:"#000"});let s=[...e.node('[data-id="tmpEx"]')?.classList].shift();e('<p data-id="tmpEx" class="leftRedBorder">Hello #2</p>',t).css({className:"leftRedBorder",paddingLeft:"4px",color:"green",borderLeft:"12px solid red"}),i.show({content:`generated class name (first element): ${s}`,callback:()=>{e.removeCssRules(".leftRedBorder",`.${s}`),setTimeout(e("[data-id='tmpEx']").remove,2500)}})},styleRulingsEx:o=>{let t=e.div("Hello")[n].append(e.span(" world")[n]);t.Style.byRule({classes2Apply:["test1","boring"],rules:[".test1 { color: green }",".boring {backgroundColor: #EEE;}"]}),t.find$("span")?.Style.nwRule(".test2 { color: red; }"),i.show({content:e.div("This resulted in:")[n].Style.nwRule("#test3 { color: blue; }").append(t),callback:()=>e.removeCssRule(".boring",".test1",".test2","#test3")})},styleObjInStyleEx:o=>{e.removeCssRule('[data-id="tmpEx"], #tmpEx');let t=e.P({data:{id:"tmpEx"}})[n].Style.inline({paddingLeft:"4px",color:"white",backgroundColor:"#000"});t.append(e.div(`HTML of hello1: ${t.HTML.get(!0,!0)}`));let s=e.P()[n].addClass("leftRedBorder").attr({data:{id:"tmpEx"}}).Style.inSheet({className:"leftRedBorder",paddingLeft:"4px",color:"green",borderLeft:"12px solid red"});s.append(e.div(`HTML of hello2: ${s.HTML.get(!0,!0)}`));let l=e(e.P({id:"tmpEx"})).Style.inSheet({paddingLeft:"4px",color:"green",borderLeft:"12px solid green"});l.append(e.div(`HTML of hello3: ${l.HTML.get(!0,!0)}`));let d=[...l[0]?.classList].shift(),v=e("<div>").html(`
          <code class="inline">hello3.Style.valueOf("borderLeftColor")</code>: ${l.toDOM().Style.valueOf("borderLeftColor")}.<br>&nbsp;<b>\u2937</b> Equivalent
          <code class="inline">hello3.Style.computed.borderLeftColor</code>: ${l.Style.computed.borderLeftColor}`),h=l.Style.computed,b=g(h.length,10)-10,f=`<div><br><code class="inline">hello3.Style.computed</code>
        (10 of ${h.length} rules, random sample)<ul>${[...h].slice(b,b+10).map(R=>`<li>${R}: ${h[R]}</li>`).join("")}</ul></div>`.replace(/\n+\s{2,}/g," ");i.show({content:e(e.DIV()).append(t,s,l,v,f),callback:()=>e.removeCssRules(`.${d}, .leftRedBorder`)})},attrEx:o=>{let t=p(o),s=e('<div data-id="tmpEx" class="initial">Hi, let me get some attributes</div>',t);s.attr({title:"Yes, I have a title now!",class:"volatile",data:{myTitle:"title as data"}});let[l,d,v,h,b]=[s.attr("data-id"),s.attr("title"),s.attr("class"),s.attr("data-my-title"),s.attr("onclick")];i.show({content:[`<code class="inline">someDiv.attr("data-id")</code>: ${l}`,`<code class="inline">someDiv.attr("data-my-title")</code>: ${h}`,`<code class="inline">someDiv.attr("title")</code>: ${d}`,`<code class="inline">someDiv.attr("class")</code>: ${v}`,`<code class="inline">someDiv.attr("onclick")</code>: ${b}`].join("<br>"),callback:s.remove})},computedStyleEx:o=>{e.editCssRule(".redEx {color: red; font-weight: bold}"),e('<p class="redEx">Hello!</p>',p(o)),i.show({content:`
            <code class="inline">$(".redEx").computedStyle("color")</code>: ${e(".redEx").computedStyle("color")}<br>
            <code class="inline">$(".redEx").computedStyle("font-weight")</code>: ${e(".redEx").computedStyle("font-weight")}`,callback:e(".redEx").remove})},dimEx:o=>{let t=e('<p data-id="tmpEx">Hello, where am I at the moment?</p>',p(o)).style({color:"red",fontWeight:"bold"}),s=JSON.stringify(t.dimensions,null,2).replace(/[}{"]/g,"").trim().replace(/\n/g,"<br>");i.show({content:s,callback:()=>t.remove()})},findEx:()=>{i.show({content:e(".docs").find("#instance_find")[0]?.outerHTML.replace(/</g,"&lt;")})},find$Ex:()=>{i.show({content:e(".docs").find$("#instance_find_D").HTML.get(1,1)})},firstEx:o=>{let t=e("#navigation li[data-key]");i.show({content:e(`<div>
         <code class="inline">jqlElems.collection.length</code>: ${t.collection.length},<br>
         outerHTML <code class="inline">jqlElems.first()</code>: ${t.first()?.outerHTML.replace(/</g,"&lt;")}</div>`)})},first$Ex:o=>{let t=e(".docs").first$("#instance_first_D"),s=()=>{i.show({content:`<code class="inline">$(".docs h3").first$(17)</code> =&gt;<br>${e(".docs h3").first$(17).HTML.get(1,1)}`})};i.show({content:`<div><code class="inline">$(".docs").first$("#instance_first_D")</code> =&gt;<br>${t.HTML.get(1,1)}</div>`,callback:s})},first$Ex2:o=>{let t=e(".docs").first$(30001);i.show({content:`<div>non existing (should be <code class="inline">undefined</code>): ${t.outerHtml}</div>`})},dataEx:o=>{let t=e("<div>Hello World again</div>",p(o));e.editCssRule("[data-is-universe]:after {content: ' ... and the universe!'; color: red;}"),t.data.add({isUniverse:!0,something:"else","dashed-prop-given":1});let{all:s}=t.data;i.show({content:`<code class="inline">helloWrld.data.all</code> =&gt; ${JSON.stringify(t.data.all)}
          <br><code class="inline">helloWrld.data.get("something")</code> =&gt; ${t.data.get("something")}
          <br><code class="inline">helloWrld.data.all.isUniverse</code> =&gt; ${t.data.all.isUniverse}
          <br><code class="inline">helloWrld.data.all["is-universe]</code> =&gt; ${t.data.all["is-universe"]}
          <br><code class="inline">helloWrld.data.get("is-universe")</code> =&gt; ${t.data.get("is-universe")}
          <br><code class="inline">helloWrld.data.get("isUniverse")</code> =&gt; ${t.data.get("isUniverse")}
          <br><code class="inline">helloWrld.data.get("dashed-prop-given")</code> =&gt; ${t.data.get("dashed-prop-given")}
          <br><code class="inline">helloWrld.data.all.nonexisting</code> =&gt; ${t.data.all.nonexisting}
          <br><code class="inline">helloWrld.data.get("nonexisting", "no sir, I'm not here")</code> =&gt; ${t.data.get("nonexisting","no sir, I'm not here")}
          <br><code class="inline">myDATA.something</code> =&gt; ${s.something}
          <br><code class="inline">myDATA.isUniverse</code> =&gt; ${s.isUniverse}`,callback:()=>{t.data.remove("isUniverse"),setTimeout(()=>{e.removeCssRule("[data-is-universe]:after"),t.remove()},3500)}})},eachEx:()=>{let o=e(".methodName"),t="rgb(165, 42, 42)",s=o.computedStyle("color");o.each(l=>e(l).style({color:s===t?"":t}))},clickNavGroup:(o,t)=>{let s=!e(t).hasClass("closed");e(".navGroup").each(l=>e(l).addClass("closed")),e.node(`#${t.dataset.group}_About`).scrollIntoView(),e(".selected").removeClass("selected"),e("ul.navGroupItems li:first-child div[data-navitem]",t).addClass("selected"),w(),!s&&t.classList.remove("closed")},clickNavItem:o=>(e(".navGroup").each(t=>e(t).addClass("closed")),e(o.target.closest(".navGroup")).removeClass("closed"),e.node(o.target.dataset.navitem).scrollIntoView(),e(".selected").removeClass("selected"),e(o.target).addClass("selected"),w()),jumpTo:o=>{let t=e(`[data-navitem='#${o}']`);t.trigger("click"),t[0].offsetTop>e.node("#navigation").offsetHeight&&t[0].scrollIntoView()},jump2Nav:o=>{let t=o.target.closest("[data-jumpgroup]")||o.target.closest("[data-jumpkey]");if(t){let s=t.dataset.jumpgroup,l=t.dataset.jumpkey;return e(s?`[data-group='${s}']`:`#${l}`).trigger("click")}}}}Prism.manual=!0;var k=location.host.startsWith("dev")||location.host.startsWith("localhost"),O=k?"../index.js":"../Bundle/jql.min.js",a=(await import(O)).default,N=new Map([["<","&lt;"],[">","&gt;"],["&",e=>`&amp;${e[1]}`],["linebreak",`
<br>`],["reducebreaks",`

`]]);a("#loader").remove();var P=e=>{let n=e.closest("pre");return n?a(n).addClass("language-javascript","line-numbers"):a(e).addClass("inline")},W=performance.now();document.title=k?`##DEV## ${document.title}`:document.title;k&&(a('link[rel="icon"]').replaceWith(a.LINK({href:"./devIco.png",rel:"icon"})),window.jql=a,window.IS=a.IS,window.popup=a.Popup);a.log("Start documenter...");var y=await fetch("./documentation.json").then(e=>e.json());a.log("Fetched documenter json...");var{clientHandling:B,allExampleActions:_}=S(a),F=["jql_About","static_About","instance_About","popup_About","debuglog_About"],q=F.reduce((e,n)=>[...e,{name:n,displayName:n.slice(0,n.indexOf("About")).toUpperCase()}],[]),A=e=>e.slice(e.indexOf("_")+1),U=({group:e,displayName:n})=>{let m=a(`<ul class="navGroup closed" data-group="${n.toLowerCase()}"/>`,a.node("#navigation"));return m.append(a(`<li class="grouped">${n}<ul class="navGroupItems"></ul></li>`)),Object.keys(y).filter(r=>r.startsWith(e.displayName.toLowerCase())).sort((r,c)=>r.localeCompare(c)).forEach(r=>{let c=r.replace(/([a-z])\$/gi,"$1_D"),u=/--DEPRECATED/.test(y[r]?.description);a(".navGroupItems",m[0]).append(a(`
            <li data-key="${c}">
            <div data-navitem="#${c}"${u?' class="deprecated"':""}>${A(r)}</div></li>`))}),n},I=a.node(".docs"),M=B;a.delegate("click",M);a.delegate("scroll",".container",M);var V=(e,n)=>{let m=e.trim().replace(/\n{3,}/g,N.get("reducebreaks"));return`<div class="exContainer"><h3 class="example">Example${n>0?` ${n+1}`:""}</h3><pre><code>${m}</code></pre></div>`};var G=e=>{let n=/(?<=<example>)(.|\n)*?(?=<\/example>)/gm,m=(e.match(n)||[]).map((c,u)=>V(c,u)),r=()=>{let c=m.shift();if(/##EXAMPLECODE/.test(c)){let u=c.slice(c.indexOf("@")+1).split("#")[0];c=c.replace(/##.+##/,_[u])+`<button class="exRunBttn" data-action="${u}">Try it</button>`}return c};return e.replace(/<example>(.|\n)*?<\/example>/g,r)};var D=e=>e.replace(/</g,"&lt;").replace(/&lt;code/g,"<code").replace(/&lt;\/code/g,"</code"),J=e=>Object.entries(e).map(([n,m])=>{let r=/_isobject/i.test(n)?"[Object&lt;string, any>]":n;return`<div class="param"><code>${D(r)}</code>: ${D(m)}</div>`});q.forEach(e=>{let n=U({group:e,displayName:e.displayName.slice(0,-1)});Object.entries(y).filter(([m,r])=>m.startsWith(`${e.displayName.toLowerCase()}`)).sort(([m],[r])=>m.localeCompare(r)).forEach(([m,r])=>{r.description=r.description.trim();let c=/--DEPRECATED/.test(r.description),u=A(m),g,i=[],x={instance:"[JQL instance].",popup:"[JQL.Popup].",debuglog:"[debugLog].",static:"[JQL]."};if(r.params?.length&&(g=`<div data-parameters><b>Parameters</b>${r.params.reduce((H,E)=>[...H,J(E)],[]).join("")}</div>`),/<example>/.test(r.description)&&(r.description=G(r.description)),u==="About")return a(`<div data-groupContainer="${n}" class="description">
          <h3 class="groupHeader" id="${e.name}">${n}</h3>${r.description.replace(/\n{3,}/g,`
`)}</div>`,I);a(`
        <div class="paragraph" data-for="${u.replace(/([a-z])\$/gi,"$1_D")}">
          <h3 class="methodName" id="${m.replace(/([a-z])\$/gi,"$1_D")}">
            <span class="group">${x[m.slice(0,m.indexOf("_"))]}</span
            ><span${c?' class="deprecated"':""}>${u}</span>
          </h3>
          ${g??""}
          <div class="returnValue"><b>Returns</b>: ${r.returnValue}</div>
          <div class="description">${c?'<b class="red">*deprecated</b> ':""}${r.description.replace(/\n{2,}/g,`
`)}</div>
        </div>`,I)})});a("code").each(P);a.log("Documenter json parsed to DOM.");y=null;a(".docs").removeClass("loading");Prism.highlightAll();a.log("Code formatting done.");a.div({class:"container"},a.div({class:"docBrowser"}))[Symbol.jql];a(".docBrowser").append(a("#navigation"),a(".docs"));a.log("Wrapped into container.");a("#jql_About").html(' (<span class="jqlTitle"><b>JQ</b>uery<b>L</b>ike</span>)',!0);a('[data-group="jql"]').trigger("click");a.log("Navigation triggered.");a.log(`Documenter implementation took ${((performance.now()-W)/1e3).toFixed(3)} seconds`);var T=Q();if(T.load){let e=T.load.replace(/about/,"About"),n=a(`[data-navitem="#${e}"]`)||a(`[data-key="${e}"]`).closest(".navGroupItems");n.length>0&&(n.trigger("click"),a.Popup.show({content:a.b("loaded ",a.code({class:"inline"},T.load)),closeAfter:2}))}function Q(){return location.search.length>1?location.search.slice(1).split("&").reduce((m,r)=>{let[c,u]=r.split("=");return{...m,[c]:u}},{}):{}}
